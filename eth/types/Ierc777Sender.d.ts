/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface Ierc777SenderInterface extends Interface {
  functions: {
    tokensToSend: TypedFunctionDescription<{
      encode([operator, from, to, amount, userData, operatorData]: [
        string,
        string,
        string,
        BigNumberish,
        Arrayish,
        Arrayish
      ]): string;
    }>;
  };

  events: {};
}

export class Ierc777Sender extends Contract {
  connect(signerOrProvider: Signer | Provider | string): Ierc777Sender;
  attach(addressOrName: string): Ierc777Sender;
  deployed(): Promise<Ierc777Sender>;

  on(event: EventFilter | string, listener: Listener): Ierc777Sender;
  once(event: EventFilter | string, listener: Listener): Ierc777Sender;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): Ierc777Sender;
  removeAllListeners(eventName: EventFilter | string): Ierc777Sender;
  removeListener(eventName: any, listener: Listener): Ierc777Sender;

  interface: Ierc777SenderInterface;

  functions: {
    /**
     * Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not.     * This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state.     * This function may revert to prevent the operation from being executed.
     */
    tokensToSend(
      operator: string,
      from: string,
      to: string,
      amount: BigNumberish,
      userData: Arrayish,
      operatorData: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  /**
   * Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not.     * This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state.     * This function may revert to prevent the operation from being executed.
   */
  tokensToSend(
    operator: string,
    from: string,
    to: string,
    amount: BigNumberish,
    userData: Arrayish,
    operatorData: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {};

  estimate: {
    tokensToSend(
      operator: string,
      from: string,
      to: string,
      amount: BigNumberish,
      userData: Arrayish,
      operatorData: Arrayish
    ): Promise<BigNumber>;
  };
}
