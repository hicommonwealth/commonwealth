name: CI
on: [push]

jobs:
  commonwealth:
    name: Commonwealth Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: packages/commonwealth

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: commonwealth
          POSTGRES_DB: commonwealth
          POSTGRES_PASSWORD: edgeware
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn
        
      - name: Typecheck
        run: yarn check-types

      - name: Run API tests
        run: yarn test-api
        env:
          NO_CLIENT: true

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: coverage

  chain-events:
    name: Chain Events Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/chain-events

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn

      - name: Run unit tests
        run: yarn unit-test

      # TODO: fix integration tests -- they currently fail
      # - name: Run integration tests
      #  run: yarn integration-test
      
      # TODO: reintegrate code coverage once we get nyc working with hardhat

      # TODO: fix linter and then reintegrate using current ts version
      # - name: Run linter
      #   run: yarn lint