name: Build and Push Docker Image

on:
  push:
    branches:
      - frick
      - frack
      - beta
      - demo
      - production

  workflow_run:
    workflows:
      - "Pre-Release Notes & Merge"  # Match the name in `cut_release.yml`
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set Heroku app name based on branch
        id: set-heroku-app-name
        run: |
          if [ "${{ github.event_name }}" == "workflow_run" ]; then
            BRANCH_NAME="beta" 
          else
            BRANCH_NAME=${GITHUB_REF##*/}
          fi
          
          case $BRANCH_NAME in
            frick)
              APP_NAME="commonwealth-frick"
              ;;
            frack)
              APP_NAME="commonwealth-frack"
              ;;
            beta)
              APP_NAME="commonwealth-beta"
              ;;
            demo)
              APP_NAME="commonwealth-demo"
              ;;
            production)
              APP_NAME="commonwealthapp"
              ;;
            *)
              echo "Branch $BRANCH_NAME is not configured for deployment."
              exit 1
              ;;
          esac
          echo "HEROKU_APP_NAME=$APP_NAME" >> $GITHUB_ENV
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - uses: actions/checkout@v3

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Heroku Container Login
        env:
          HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
        run: |
          echo "machine api.heroku.com\n  login ${{ secrets.HEROKU_EMAIL }}\n  password ${{ secrets.HEROKU_API_TOKEN }}\nmachine git.heroku.com\n  login ${{ secrets.HEROKU_EMAIL }}\n  password ${{ secrets.HEROKU_API_TOKEN }}" > ~/.netrc
          heroku container:login

      - name: Build and Push Docker Image (web)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/commonwealth/deploy/dockerfiles/Dockerfile.web
          push: true
          tags: registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web:latest
          cache-from: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web:buildcache
          cache-to: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web:buildcache,mode=max

      - name: Build and Push Docker Image (consumer)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/commonwealth/deploy/dockerfiles/Dockerfile.consumer
          push: true
          tags: registry.heroku.com/${{ env.HEROKU_APP_NAME }}/consumer:latest
          cache-from: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/consumer:buildcache
          cache-to: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/consumer:buildcache,mode=max

      - name: Build and Push Docker Image (discord_listener)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/commonwealth/deploy/dockerfiles/Dockerfile.discord_listener
          push: true
          tags: registry.heroku.com/${{ env.HEROKU_APP_NAME }}/discord_listener:latest
          cache-from: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/discord_listener:buildcache
          cache-to: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/discord_listener:buildcache,mode=max

      - name: Build and Push Docker Image (evm_ce)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/commonwealth/deploy/dockerfiles/Dockerfile.evm_ce
          push: true
          tags: registry.heroku.com/${{ env.HEROKU_APP_NAME }}/evm_ce:latest
          cache-from: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/evm_ce:buildcache
          cache-to: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/evm_ce:buildcache,mode=max

      - name: Build and Push Docker Image (graphile_worker)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/commonwealth/deploy/dockerfiles/Dockerfile.graphile_worker
          push: true
          tags: registry.heroku.com/${{ env.HEROKU_APP_NAME }}/graphile_worker:latest
          cache-from: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/graphile_worker:buildcache
          cache-to: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/graphile_worker:buildcache,mode=max

      - name: Build and Push Docker Image (knock)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/commonwealth/deploy/dockerfiles/Dockerfile.knock
          push: true
          tags: registry.heroku.com/${{ env.HEROKU_APP_NAME }}/knock:latest
          cache-from: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/knock:buildcache
          cache-to: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/knock:buildcache,mode=max

      - name: Build and Push Docker Image (message_relayer)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/commonwealth/deploy/dockerfiles/Dockerfile.message_relayer
          push: true
          tags: registry.heroku.com/${{ env.HEROKU_APP_NAME }}/message_relayer:latest
          cache-from: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/message_relayer:buildcache
          cache-to: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/message_relayer:buildcache,mode=max

      - name: Build and Push Docker Image (release)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/commonwealth/deploy/dockerfiles/Dockerfile.release
          push: true
          tags: registry.heroku.com/${{ env.HEROKU_APP_NAME }}/release:latest
          cache-from: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/release:buildcache
          cache-to: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/release:buildcache,mode=max

      - name: Build and Push Docker Image (twitter)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/commonwealth/deploy/dockerfiles/Dockerfile.twitter
          push: true
          tags: registry.heroku.com/${{ env.HEROKU_APP_NAME }}/twitter:latest
          cache-from: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/twitter:buildcache
          cache-to: type=registry,ref=registry.heroku.com/${{ env.HEROKU_APP_NAME }}/twitter:buildcache,mode=max

      - name: Release Heroku Containers
        env:
          HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
        run: |
          heroku container:release web consumer discord_listener evm_ce graphile_worker knock message_relayer release twitter -a ${{ env.HEROKU_APP_NAME }}