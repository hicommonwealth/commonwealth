/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { GuildBank1 } from "../GuildBank1";

export class GuildBank1__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    approvedTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GuildBank1> {
    return super.deploy(
      approvedTokenAddress,
      overrides || {}
    ) as Promise<GuildBank1>;
  }
  getDeployTransaction(
    approvedTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(approvedTokenAddress, overrides || {});
  }
  attach(address: string): GuildBank1 {
    return super.attach(address) as GuildBank1;
  }
  connect(signer: Signer): GuildBank1__factory {
    return super.connect(signer) as GuildBank1__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GuildBank1 {
    return new Contract(address, _abi, signerOrProvider) as GuildBank1;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "receiver",
        type: "address",
      },
      {
        name: "shares",
        type: "uint256",
      },
      {
        name: "totalShares",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "approvedToken",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "approvedTokenAddress",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405160208061076a8339810180604052602081101561003057600080fd5b505160006100436100b2602090811b901c565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b0319166001600160a01b03929092169190911790556100b6565b3390565b6106a5806100c56000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b146100715780638f32d59b14610095578063b5c5f672146100b1578063bab46259146100e3578063f2fde38b146100eb575b600080fd5b61006f610111565b005b6100796101b9565b604080516001600160a01b039092168252519081900360200190f35b61009d6101c8565b604080519115158252519081900360200190f35b61009d600480360360608110156100c757600080fd5b506001600160a01b0381351690602081013590604001356101ec565b6100796103bc565b61006f6004803603602081101561010157600080fd5b50356001600160a01b03166103cb565b6101196101c8565b151561016f5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b600080546001600160a01b03166101dd610435565b6001600160a01b031614905090565b60006101f66101c8565b151561024c5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60015460408051600160e01b6370a0823102815230600482015290516000926102ed9286926102e19289926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b1580156102a957600080fd5b505afa1580156102bd573d6000803e3d6000fd5b505050506040513d60208110156102d357600080fd5b50519063ffffffff61043916565b9063ffffffff6104a216565b6040805182815290519192506001600160a01b038716917f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659181900360200190a260015460408051600160e01b63a9059cbb0281526001600160a01b038881166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561038757600080fd5b505af115801561039b573d6000803e3d6000fd5b505050506040513d60208110156103b157600080fd5b505195945050505050565b6001546001600160a01b031681565b6103d36101c8565b15156104295760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610432816104e4565b50565b3390565b600082151561044a5750600061049c565b82820282848281151561045957fe5b041461049957604051600160e51b62461bcd0281526004018080602001828103825260218152602001806106596021913960400191505060405180910390fd5b90505b92915050565b600061049983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610589565b6001600160a01b038116151561052e57604051600160e51b62461bcd0281526004018080602001828103825260268152602001806106336026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008183151561061a57604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156105df5781810151838201526020016105c7565b50505050905090810190601f16801561060c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581151561062857fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a165627a7a723058205f716dc24354f591dbda8a21a0978b7c7a86ec9a3fbfd21c9f28af6151b54f470029";
