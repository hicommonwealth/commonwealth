/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { SelfdestructTransfer } from "../SelfdestructTransfer";

export class SelfdestructTransfer__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SelfdestructTransfer> {
    return super.deploy(overrides || {}) as Promise<SelfdestructTransfer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SelfdestructTransfer {
    return super.attach(address) as SelfdestructTransfer;
  }
  connect(signer: Signer): SelfdestructTransfer__factory {
    return super.connect(signer) as SelfdestructTransfer__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SelfdestructTransfer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SelfdestructTransfer;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
    ],
    name: "destroyAndTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060888061001e6000396000f3fe608060405260043610601c5760003560e01c8063785e07b3146021575b600080fd5b604460048036036020811015603557600080fd5b50356001600160a01b03166046565b005b806001600160a01b0316fffea264697066735822122039cd6f3f3e3077a165b99440c924173ee7c36146ecd3a327a12955042d1d25e064736f6c634300060c0033";
