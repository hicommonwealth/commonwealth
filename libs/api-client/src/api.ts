/* tslint:disable */
/* eslint-disable */
/**
 * Common API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AxiosInstance, AxiosPromise, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
import type { Configuration } from './configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import type { RequestArgs } from './base';
import {
  DUMMY_BASE_URL,
  assertParamExists,
  createRequestFunction,
  setSearchParams,
  toPathString,
} from './common';
// @ts-ignore
import { BASE_PATH, BaseAPI, RequiredError, operationServerMap } from './base';

/**
 *
 * @export
 * @interface GetCommunities200Response
 */
export interface GetCommunities200Response {
  /**
   *
   * @type {number}
   * @memberof GetCommunities200Response
   */
  limit: number;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200Response
   */
  page: number;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200Response
   */
  totalPages: number;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200Response
   */
  totalResults: number;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInner>}
   * @memberof GetCommunities200Response
   */
  results: Array<GetCommunities200ResponseResultsInner>;
}
/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInner
 */
export interface GetCommunities200ResponseResultsInner {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  name: string;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInner
   */
  chain_node_id: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  default_symbol?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  network?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  base: GetCommunities200ResponseResultsInnerBaseEnum;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  icon_url?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInner
   */
  active: boolean;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  type?: GetCommunities200ResponseResultsInnerTypeEnum;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  description?: string | null;
  /**
   *
   * @type {Array<string>}
   * @memberof GetCommunities200ResponseResultsInner
   */
  social_links?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInner
   */
  ss58_prefix?: number | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInner
   */
  stages_enabled?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof GetCommunities200ResponseResultsInner
   */
  custom_stages?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  custom_domain?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  block_explorer_ids?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInner
   */
  collapsed_on_homepage?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInner
   */
  has_chain_events_listener?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInner
   */
  default_summary_view?: boolean | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  default_page?: GetCommunities200ResponseResultsInnerDefaultPageEnum | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  has_homepage?: GetCommunities200ResponseResultsInnerHasHomepageEnum | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  terms?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInner
   */
  admin_only_polling?: boolean | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  bech32_prefix?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInner
   */
  hide_projects?: boolean | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  token_name?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInner
   */
  ce_verbose?: boolean | null;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInner
   */
  discord_config_id?: number | null;
  /**
   *
   * @type {any}
   * @memberof GetCommunities200ResponseResultsInner
   */
  category?: any | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInner
   */
  discord_bot_webhooks_enabled?: boolean | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInner
   */
  directory_page_enabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInner
   */
  directory_page_chain_node_id?: number | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  namespace?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  namespace_address?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  redirect?: string | null;
  /**
   *
   * @type {Array<string>}
   * @memberof GetCommunities200ResponseResultsInner
   */
  snapshot_spaces?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInner
   */
  include_in_digest_email?: boolean | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  created_at?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInner
   */
  updated_at?: string;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerAddressesInner>}
   * @memberof GetCommunities200ResponseResultsInner
   */
  Addresses?: Array<GetCommunities200ResponseResultsInnerAddressesInner>;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerCommunityStakesInner>}
   * @memberof GetCommunities200ResponseResultsInner
   */
  CommunityStakes?: Array<GetCommunities200ResponseResultsInnerCommunityStakesInner> | null;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerCommunityTagsInner>}
   * @memberof GetCommunities200ResponseResultsInner
   */
  CommunityTags?: Array<GetCommunities200ResponseResultsInnerCommunityTagsInner> | null;
  /**
   *
   * @type {GetCommunities200ResponseResultsInnerChainNode}
   * @memberof GetCommunities200ResponseResultsInner
   */
  ChainNode?: GetCommunities200ResponseResultsInnerChainNode;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerTopicsInner>}
   * @memberof GetCommunities200ResponseResultsInner
   */
  topics?: Array<GetCommunities200ResponseResultsInnerTopicsInner>;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerGroupsInner>}
   * @memberof GetCommunities200ResponseResultsInner
   */
  groups?: Array<GetCommunities200ResponseResultsInnerGroupsInner>;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerContestManagersInner>}
   * @memberof GetCommunities200ResponseResultsInner
   */
  contest_managers?: Array<GetCommunities200ResponseResultsInnerContestManagersInner>;
}

export const GetCommunities200ResponseResultsInnerBaseEnum = {
  Cosmos: 'cosmos',
  Substrate: 'substrate',
  Ethereum: 'ethereum',
  Near: 'near',
  Solana: 'solana',
} as const;

export type GetCommunities200ResponseResultsInnerBaseEnum =
  (typeof GetCommunities200ResponseResultsInnerBaseEnum)[keyof typeof GetCommunities200ResponseResultsInnerBaseEnum];
export const GetCommunities200ResponseResultsInnerTypeEnum = {
  Chain: 'chain',
  Dao: 'dao',
  Token: 'token',
  Offchain: 'offchain',
} as const;

export type GetCommunities200ResponseResultsInnerTypeEnum =
  (typeof GetCommunities200ResponseResultsInnerTypeEnum)[keyof typeof GetCommunities200ResponseResultsInnerTypeEnum];
export const GetCommunities200ResponseResultsInnerDefaultPageEnum = {
  DefaultAllDiscussionsView: 'default_all_discussions_view',
  DefaultSummaryView: 'default_summary_view',
  Homepage: 'homepage',
} as const;

export type GetCommunities200ResponseResultsInnerDefaultPageEnum =
  (typeof GetCommunities200ResponseResultsInnerDefaultPageEnum)[keyof typeof GetCommunities200ResponseResultsInnerDefaultPageEnum];
export const GetCommunities200ResponseResultsInnerHasHomepageEnum = {
  True: 'true',
  False: 'false',
} as const;

export type GetCommunities200ResponseResultsInnerHasHomepageEnum =
  (typeof GetCommunities200ResponseResultsInnerHasHomepageEnum)[keyof typeof GetCommunities200ResponseResultsInnerHasHomepageEnum];

/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerAddressesInner
 */
export interface GetCommunities200ResponseResultsInnerAddressesInner {
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  address: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  community_id: string;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  user_id?: number | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  verification_token: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  verification_token_expires?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  verified?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  last_active?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  ghost_address?: boolean;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  wallet_id?: GetCommunities200ResponseResultsInnerAddressesInnerWalletIdEnum | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  block_info?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  is_user_default?: boolean;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  role?: GetCommunities200ResponseResultsInnerAddressesInnerRoleEnum;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  wallet_sso_source?: GetCommunities200ResponseResultsInnerAddressesInnerWalletSsoSourceEnum | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  hex?: string | null;
  /**
   *
   * @type {GetCommunities200ResponseResultsInnerAddressesInnerUser}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  User?: GetCommunities200ResponseResultsInnerAddressesInnerUser;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  created_at?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInner
   */
  updated_at?: string;
}

export const GetCommunities200ResponseResultsInnerAddressesInnerWalletIdEnum = {
  Magic: 'magic',
  Polkadot: 'polkadot',
  Metamask: 'metamask',
  Walletconnect: 'walletconnect',
  KeplrEthereum: 'keplr-ethereum',
  Keplr: 'keplr',
  Leap: 'leap',
  Near: 'near',
  Terrastation: 'terrastation',
  TerraWalletconnect: 'terra-walletconnect',
  CosmMetamask: 'cosm-metamask',
  Phantom: 'phantom',
  Coinbase: 'coinbase',
} as const;

export type GetCommunities200ResponseResultsInnerAddressesInnerWalletIdEnum =
  (typeof GetCommunities200ResponseResultsInnerAddressesInnerWalletIdEnum)[keyof typeof GetCommunities200ResponseResultsInnerAddressesInnerWalletIdEnum];
export const GetCommunities200ResponseResultsInnerAddressesInnerRoleEnum = {
  Admin: 'admin',
  Moderator: 'moderator',
  Member: 'member',
} as const;

export type GetCommunities200ResponseResultsInnerAddressesInnerRoleEnum =
  (typeof GetCommunities200ResponseResultsInnerAddressesInnerRoleEnum)[keyof typeof GetCommunities200ResponseResultsInnerAddressesInnerRoleEnum];
export const GetCommunities200ResponseResultsInnerAddressesInnerWalletSsoSourceEnum =
  {
    Google: 'google',
    Github: 'github',
    Discord: 'discord',
    Twitter: 'twitter',
    Apple: 'apple',
    Email: 'email',
    Unknown: 'unknown',
  } as const;

export type GetCommunities200ResponseResultsInnerAddressesInnerWalletSsoSourceEnum =
  (typeof GetCommunities200ResponseResultsInnerAddressesInnerWalletSsoSourceEnum)[keyof typeof GetCommunities200ResponseResultsInnerAddressesInnerWalletSsoSourceEnum];

/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerAddressesInnerUser
 */
export interface GetCommunities200ResponseResultsInnerAddressesInnerUser {
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUser
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUser
   */
  email?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUser
   */
  isAdmin?: boolean | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUser
   */
  disableRichText?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUser
   */
  emailVerified?: boolean | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUser
   */
  selected_community_id?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUser
   */
  emailNotificationInterval?: GetCommunities200ResponseResultsInnerAddressesInnerUserEmailNotificationIntervalEnum;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUser
   */
  promotional_emails_enabled?: boolean | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUser
   */
  is_welcome_onboard_flow_complete?: boolean;
  /**
   *
   * @type {GetCommunities200ResponseResultsInnerAddressesInnerUserProfile}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUser
   */
  profile: GetCommunities200ResponseResultsInnerAddressesInnerUserProfile;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerAddressesInnerUserProfileTagsInner>}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUser
   */
  ProfileTags?: Array<GetCommunities200ResponseResultsInnerAddressesInnerUserProfileTagsInner>;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUser
   */
  created_at?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUser
   */
  updated_at?: string;
}

export const GetCommunities200ResponseResultsInnerAddressesInnerUserEmailNotificationIntervalEnum =
  {
    Weekly: 'weekly',
    Never: 'never',
  } as const;

export type GetCommunities200ResponseResultsInnerAddressesInnerUserEmailNotificationIntervalEnum =
  (typeof GetCommunities200ResponseResultsInnerAddressesInnerUserEmailNotificationIntervalEnum)[keyof typeof GetCommunities200ResponseResultsInnerAddressesInnerUserEmailNotificationIntervalEnum];

/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerAddressesInnerUserProfile
 */
export interface GetCommunities200ResponseResultsInnerAddressesInnerUserProfile {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUserProfile
   */
  name?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUserProfile
   */
  email?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUserProfile
   */
  website?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUserProfile
   */
  bio?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUserProfile
   */
  avatar_url?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUserProfile
   */
  slug?: string | null;
  /**
   *
   * @type {Array<string>}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUserProfile
   */
  socials?: Array<string> | null;
  /**
   *
   * @type {GetCommunities200ResponseResultsInnerAddressesInnerUserProfileBackgroundImage}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUserProfile
   */
  background_image?: GetCommunities200ResponseResultsInnerAddressesInnerUserProfileBackgroundImage | null;
}
/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerAddressesInnerUserProfileBackgroundImage
 */
export interface GetCommunities200ResponseResultsInnerAddressesInnerUserProfileBackgroundImage {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUserProfileBackgroundImage
   */
  url?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUserProfileBackgroundImage
   */
  imageBehavior?: string | null;
}
/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerAddressesInnerUserProfileTagsInner
 */
export interface GetCommunities200ResponseResultsInnerAddressesInnerUserProfileTagsInner {
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUserProfileTagsInner
   */
  user_id: number;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUserProfileTagsInner
   */
  tag_id: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUserProfileTagsInner
   */
  created_at?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerAddressesInnerUserProfileTagsInner
   */
  updated_at?: string;
}
/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerChainNode
 */
export interface GetCommunities200ResponseResultsInnerChainNode {
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  url: string;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  eth_chain_id?: number | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  alt_wallet_url?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  private_url?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  balance_type: GetCommunities200ResponseResultsInnerChainNodeBalanceTypeEnum;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  description?: string | null;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  ss58?: number | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  bech32?: string | null;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  slip44?: number | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  cosmos_chain_id?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  cosmos_gov_version?: GetCommunities200ResponseResultsInnerChainNodeCosmosGovVersionEnum | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  health?: GetCommunities200ResponseResultsInnerChainNodeHealthEnum | null;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerChainNodeContractsInner>}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  contracts?: Array<GetCommunities200ResponseResultsInnerChainNodeContractsInner> | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  block_explorer?: string | null;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  max_ce_block_range?: number | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  created_at?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNode
   */
  updated_at?: string;
}

export const GetCommunities200ResponseResultsInnerChainNodeBalanceTypeEnum = {
  Terra: 'terra',
  Ethereum: 'ethereum',
  Solana: 'solana',
  Cosmos: 'cosmos',
  Near: 'near',
  Substrate: 'substrate',
} as const;

export type GetCommunities200ResponseResultsInnerChainNodeBalanceTypeEnum =
  (typeof GetCommunities200ResponseResultsInnerChainNodeBalanceTypeEnum)[keyof typeof GetCommunities200ResponseResultsInnerChainNodeBalanceTypeEnum];
export const GetCommunities200ResponseResultsInnerChainNodeCosmosGovVersionEnum =
  {
    V1: 'v1',
    V1beta1: 'v1beta1',
    V1beta1AttemptFailed: 'v1beta1-attempt-failed',
    V1AttemptFailed: 'v1-attempt-failed',
  } as const;

export type GetCommunities200ResponseResultsInnerChainNodeCosmosGovVersionEnum =
  (typeof GetCommunities200ResponseResultsInnerChainNodeCosmosGovVersionEnum)[keyof typeof GetCommunities200ResponseResultsInnerChainNodeCosmosGovVersionEnum];
export const GetCommunities200ResponseResultsInnerChainNodeHealthEnum = {
  Failed: 'failed',
  Healthy: 'healthy',
} as const;

export type GetCommunities200ResponseResultsInnerChainNodeHealthEnum =
  (typeof GetCommunities200ResponseResultsInnerChainNodeHealthEnum)[keyof typeof GetCommunities200ResponseResultsInnerChainNodeHealthEnum];

/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerChainNodeContractsInner
 */
export interface GetCommunities200ResponseResultsInnerChainNodeContractsInner {
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerChainNodeContractsInner
   */
  id: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNodeContractsInner
   */
  address: string;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerChainNodeContractsInner
   */
  chain_node_id: number;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerChainNodeContractsInner
   */
  abi_id?: number | null;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerChainNodeContractsInner
   */
  decimals?: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNodeContractsInner
   */
  token_name?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNodeContractsInner
   */
  symbol?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNodeContractsInner
   */
  type: string;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInnerChainNodeContractsInner
   */
  is_factory?: boolean;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNodeContractsInner
   */
  nickname?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNodeContractsInner
   */
  created_at?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerChainNodeContractsInner
   */
  updated_at?: string;
}
/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerCommunityStakesInner
 */
export interface GetCommunities200ResponseResultsInnerCommunityStakesInner {
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInner
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInner
   */
  community_id: string;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInner
   */
  stake_id?: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInner
   */
  stake_token?: string;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInner
   */
  vote_weight?: number;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInner
   */
  stake_enabled?: boolean;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInner>}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInner
   */
  StakeTransactions?: Array<GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInner> | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInner
   */
  created_at?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInner
   */
  updated_at?: string;
}
/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInner
 */
export interface GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInner {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInner
   */
  transaction_hash: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInner
   */
  community_id: string;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInner
   */
  stake_id?: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInner
   */
  address: string;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInner
   */
  stake_amount: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInner
   */
  stake_price?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInner
   */
  stake_direction: GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInnerStakeDirectionEnum;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInner
   */
  timestamp: number;
}

export const GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInnerStakeDirectionEnum =
  {
    Buy: 'buy',
    Sell: 'sell',
  } as const;

export type GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInnerStakeDirectionEnum =
  (typeof GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInnerStakeDirectionEnum)[keyof typeof GetCommunities200ResponseResultsInnerCommunityStakesInnerStakeTransactionsInnerStakeDirectionEnum];

/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerCommunityTagsInner
 */
export interface GetCommunities200ResponseResultsInnerCommunityTagsInner {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerCommunityTagsInner
   */
  community_id: string;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerCommunityTagsInner
   */
  tag_id: number;
  /**
   *
   * @type {GetCommunities200ResponseResultsInnerCommunityTagsInnerTag}
   * @memberof GetCommunities200ResponseResultsInnerCommunityTagsInner
   */
  Tag?: GetCommunities200ResponseResultsInnerCommunityTagsInnerTag | null;
}
/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerCommunityTagsInnerTag
 */
export interface GetCommunities200ResponseResultsInnerCommunityTagsInnerTag {
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerCommunityTagsInnerTag
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerCommunityTagsInnerTag
   */
  name: string;
}
/**
 * On-Chain Contest Manager
 * @export
 * @interface GetCommunities200ResponseResultsInnerContestManagersInner
 */
export interface GetCommunities200ResponseResultsInnerContestManagersInner {
  /**
   * On-Chain contest manager address
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInner
   */
  contest_address: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInner
   */
  community_id: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInner
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInner
   */
  image_url?: string | null;
  /**
   * Provided by admin on creation when stake funds are not used
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInner
   */
  funding_token_address?: string | null;
  /**
   * Percentage of pool used for prizes in recurring contests
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInner
   */
  prize_percentage?: number | null;
  /**
   * Sorted array of percentages for prize, from first to last
   * @type {Array<number>}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInner
   */
  payout_structure: Array<number>;
  /**
   * Recurring contest interval, 0 when one-off
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInner
   */
  interval: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInner
   */
  ticker?: string;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInner
   */
  decimals?: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInner
   */
  created_at: string;
  /**
   * Flags when contest policy is cancelled by admin
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInner
   */
  cancelled?: boolean | null;
  /**
   * Flags when the one-off contest has ended and rollover was completed
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInner
   */
  ended?: boolean | null;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerTopicsInner>}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInner
   */
  topics?: Array<GetCommunities200ResponseResultsInnerTopicsInner> | null;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerContestManagersInnerContestsInner>}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInner
   */
  contests?: Array<GetCommunities200ResponseResultsInnerContestManagersInnerContestsInner> | null;
}
/**
 * On-Chain contest instance
 * @export
 * @interface GetCommunities200ResponseResultsInnerContestManagersInnerContestsInner
 */
export interface GetCommunities200ResponseResultsInnerContestManagersInnerContestsInner {
  /**
   * On-Chain contest manager address
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInner
   */
  contest_address: string;
  /**
   * On-Chain contest id, 0 when one-off
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInner
   */
  contest_id: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInner
   */
  start_time: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInner
   */
  end_time: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInner
   */
  score_updated_at?: string | null;
  /**
   * Contest score, sorted from first to last
   * @type {Array<GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerScoreInner>}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInner
   */
  score?: Array<GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerScoreInner> | null;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInner>}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInner
   */
  actions?: Array<GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInner> | null;
}
/**
 * On-Chain content related actions on contest instance
 * @export
 * @interface GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInner
 */
export interface GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInner {
  /**
   * On-Chain contest manager address
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInner
   */
  contest_address: string;
  /**
   * On-Chain contest id, 0 when one-off
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInner
   */
  contest_id: number;
  /**
   * On-Chain content id, 0 when adding
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInner
   */
  content_id: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInner
   */
  actor_address: string;
  /**
   * Type of content action
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInner
   */
  action: GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInnerActionEnum;
  /**
   * Content url
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInner
   */
  content_url?: string | null;
  /**
   * Thread id mapped from content url
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInner
   */
  thread_id?: number | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInner
   */
  thread_title?: string | null;
  /**
   * Voting power of address when action was recorded
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInner
   */
  voting_power: number;
  /**
   * Date-time when action was recorded
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInner
   */
  created_at: string;
}

export const GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInnerActionEnum =
  {
    Added: 'added',
    Upvoted: 'upvoted',
  } as const;

export type GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInnerActionEnum =
  (typeof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInnerActionEnum)[keyof typeof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerActionsInnerActionEnum];

/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerScoreInner
 */
export interface GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerScoreInner {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerScoreInner
   */
  creator_address: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerScoreInner
   */
  content_id: string;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerScoreInner
   */
  votes: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerScoreInner
   */
  prize: string;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerContestManagersInnerContestsInnerScoreInner
   */
  tickerPrize?: number;
}
/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerGroupsInner
 */
export interface GetCommunities200ResponseResultsInnerGroupsInner {
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInner
   */
  id: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInner
   */
  community_id: string;
  /**
   *
   * @type {GetCommunities200ResponseResultsInnerGroupsInnerMetadata}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInner
   */
  metadata: GetCommunities200ResponseResultsInnerGroupsInnerMetadata;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInner>}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInner
   */
  requirements: Array<GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInner>;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInner
   */
  is_system_managed?: boolean;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInner
   */
  created_at?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInner
   */
  updated_at?: string;
}
/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerGroupsInnerMetadata
 */
export interface GetCommunities200ResponseResultsInnerGroupsInnerMetadata {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerMetadata
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerMetadata
   */
  description: string;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerMetadata
   */
  required_requirements?: number | null;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerMetadata
   */
  membership_ttl?: number | null;
}
/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInner
 */
export interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInner {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInner
   */
  rule: GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerRuleEnum;
  /**
   *
   * @type {GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1Data}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInner
   */
  data: GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1Data;
}

export const GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerRuleEnum =
  {
    Allow: 'allow',
  } as const;

export type GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerRuleEnum =
  (typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerRuleEnum)[keyof typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerRuleEnum];

/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf
 */
export interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf
   */
  rule: GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfRuleEnum;
  /**
   *
   * @type {GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfData}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf
   */
  data: GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfData;
}

export const GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfRuleEnum =
  {
    Threshold: 'threshold',
  } as const;

export type GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfRuleEnum =
  (typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfRuleEnum)[keyof typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfRuleEnum];

/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1
 */
export interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1 {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1
   */
  rule: GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1RuleEnum;
  /**
   *
   * @type {GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1Data}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1
   */
  data: GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1Data;
}

export const GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1RuleEnum =
  {
    Allow: 'allow',
  } as const;

export type GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1RuleEnum =
  (typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1RuleEnum)[keyof typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1RuleEnum];

/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1Data
 */
export interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1Data {
  /**
   *
   * @type {Array<string>}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOf1Data
   */
  allow: Array<string>;
}
/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfData
 */
export interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfData {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfData
   */
  threshold: string;
  /**
   *
   * @type {GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSource}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfData
   */
  source: GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSource;
}
/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSource
 */
export interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSource {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSource
   */
  source_type: GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceSourceTypeEnum;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSource
   */
  evm_chain_id: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSource
   */
  contract_address: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSource
   */
  token_id?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSource
   */
  cosmos_chain_id: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSource
   */
  token_symbol: string;
}

export const GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceSourceTypeEnum =
  {
    Cw721: 'cw721',
    Cw20: 'cw20',
  } as const;

export type GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceSourceTypeEnum =
  (typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceSourceTypeEnum)[keyof typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceSourceTypeEnum];

/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf
 */
export interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf
   */
  source_type: GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOfSourceTypeEnum;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf
   */
  evm_chain_id: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf
   */
  contract_address: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf
   */
  token_id?: string | null;
}

export const GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOfSourceTypeEnum =
  {
    Erc20: 'erc20',
    Erc721: 'erc721',
    Erc1155: 'erc1155',
    Spl: 'spl',
  } as const;

export type GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOfSourceTypeEnum =
  (typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOfSourceTypeEnum)[keyof typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOfSourceTypeEnum];

/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf1
 */
export interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf1 {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf1
   */
  source_type: GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf1SourceTypeEnum;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf1
   */
  evm_chain_id: number;
}

export const GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf1SourceTypeEnum =
  {
    EthNative: 'eth_native',
  } as const;

export type GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf1SourceTypeEnum =
  (typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf1SourceTypeEnum)[keyof typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf1SourceTypeEnum];

/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf2
 */
export interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf2 {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf2
   */
  source_type: GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf2SourceTypeEnum;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf2
   */
  cosmos_chain_id: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf2
   */
  token_symbol: string;
}

export const GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf2SourceTypeEnum =
  {
    CosmosNative: 'cosmos_native',
  } as const;

export type GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf2SourceTypeEnum =
  (typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf2SourceTypeEnum)[keyof typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf2SourceTypeEnum];

/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf3
 */
export interface GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf3 {
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf3
   */
  source_type: GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf3SourceTypeEnum;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf3
   */
  cosmos_chain_id: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf3
   */
  contract_address: string;
}

export const GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf3SourceTypeEnum =
  {
    Cw721: 'cw721',
    Cw20: 'cw20',
  } as const;

export type GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf3SourceTypeEnum =
  (typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf3SourceTypeEnum)[keyof typeof GetCommunities200ResponseResultsInnerGroupsInnerRequirementsInnerAnyOfDataSourceAnyOf3SourceTypeEnum];

/**
 *
 * @export
 * @interface GetCommunities200ResponseResultsInnerTopicsInner
 */
export interface GetCommunities200ResponseResultsInnerTopicsInner {
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerTopicsInner
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerTopicsInner
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerTopicsInner
   */
  community_id: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerTopicsInner
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerTopicsInner
   */
  telegram?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInnerTopicsInner
   */
  featured_in_sidebar?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunities200ResponseResultsInnerTopicsInner
   */
  featured_in_new_post?: boolean;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerTopicsInner
   */
  default_offchain_template?: string | null;
  /**
   *
   * @type {number}
   * @memberof GetCommunities200ResponseResultsInnerTopicsInner
   */
  order?: number | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerTopicsInner
   */
  channel_id?: string | null;
  /**
   *
   * @type {Array<number>}
   * @memberof GetCommunities200ResponseResultsInnerTopicsInner
   */
  group_ids?: Array<number>;
  /**
   *
   * @type {string}
   * @memberof GetCommunities200ResponseResultsInnerTopicsInner
   */
  default_offchain_template_backup?: string | null;
}
/**
 *
 * @export
 * @interface GetCommunitiesDefaultResponse
 */
export interface GetCommunitiesDefaultResponse {
  /**
   *
   * @type {string}
   * @memberof GetCommunitiesDefaultResponse
   */
  message: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunitiesDefaultResponse
   */
  code: string;
  /**
   *
   * @type {Array<GetCommunitiesDefaultResponseIssuesInner>}
   * @memberof GetCommunitiesDefaultResponse
   */
  issues?: Array<GetCommunitiesDefaultResponseIssuesInner>;
}
/**
 *
 * @export
 * @interface GetCommunitiesDefaultResponseIssuesInner
 */
export interface GetCommunitiesDefaultResponseIssuesInner {
  /**
   *
   * @type {string}
   * @memberof GetCommunitiesDefaultResponseIssuesInner
   */
  message: string;
}
/**
 *
 * @export
 * @interface GetCommunity200Response
 */
export interface GetCommunity200Response {
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  name: string;
  /**
   *
   * @type {number}
   * @memberof GetCommunity200Response
   */
  chain_node_id: number;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  default_symbol?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  network?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  base: GetCommunity200ResponseBaseEnum;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  icon_url?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunity200Response
   */
  active: boolean;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  type?: GetCommunity200ResponseTypeEnum;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  description?: string | null;
  /**
   *
   * @type {Array<string>}
   * @memberof GetCommunity200Response
   */
  social_links?: Array<string>;
  /**
   *
   * @type {number}
   * @memberof GetCommunity200Response
   */
  ss58_prefix?: number | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunity200Response
   */
  stages_enabled?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof GetCommunity200Response
   */
  custom_stages?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  custom_domain?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  block_explorer_ids?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunity200Response
   */
  collapsed_on_homepage?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunity200Response
   */
  has_chain_events_listener?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunity200Response
   */
  default_summary_view?: boolean | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  default_page?: GetCommunity200ResponseDefaultPageEnum | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  has_homepage?: GetCommunity200ResponseHasHomepageEnum | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  terms?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunity200Response
   */
  admin_only_polling?: boolean | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  bech32_prefix?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunity200Response
   */
  hide_projects?: boolean | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  token_name?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunity200Response
   */
  ce_verbose?: boolean | null;
  /**
   *
   * @type {number}
   * @memberof GetCommunity200Response
   */
  discord_config_id?: number | null;
  /**
   *
   * @type {any}
   * @memberof GetCommunity200Response
   */
  category?: any | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunity200Response
   */
  discord_bot_webhooks_enabled?: boolean | null;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunity200Response
   */
  directory_page_enabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof GetCommunity200Response
   */
  directory_page_chain_node_id?: number | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  namespace?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  namespace_address?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  redirect?: string | null;
  /**
   *
   * @type {Array<string>}
   * @memberof GetCommunity200Response
   */
  snapshot_spaces?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof GetCommunity200Response
   */
  include_in_digest_email?: boolean | null;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  created_at?: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  updated_at?: string;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerAddressesInner>}
   * @memberof GetCommunity200Response
   */
  Addresses?: Array<GetCommunities200ResponseResultsInnerAddressesInner>;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerCommunityStakesInner>}
   * @memberof GetCommunity200Response
   */
  CommunityStakes?: Array<GetCommunities200ResponseResultsInnerCommunityStakesInner> | null;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerCommunityTagsInner>}
   * @memberof GetCommunity200Response
   */
  CommunityTags?: Array<GetCommunities200ResponseResultsInnerCommunityTagsInner> | null;
  /**
   *
   * @type {GetCommunities200ResponseResultsInnerChainNode}
   * @memberof GetCommunity200Response
   */
  ChainNode?: GetCommunities200ResponseResultsInnerChainNode;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerTopicsInner>}
   * @memberof GetCommunity200Response
   */
  topics?: Array<GetCommunities200ResponseResultsInnerTopicsInner>;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerGroupsInner>}
   * @memberof GetCommunity200Response
   */
  groups?: Array<GetCommunities200ResponseResultsInnerGroupsInner>;
  /**
   *
   * @type {Array<GetCommunities200ResponseResultsInnerContestManagersInner>}
   * @memberof GetCommunity200Response
   */
  contest_managers?: Array<GetCommunities200ResponseResultsInnerContestManagersInner>;
  /**
   *
   * @type {number}
   * @memberof GetCommunity200Response
   */
  numVotingThreads: number;
  /**
   *
   * @type {number}
   * @memberof GetCommunity200Response
   */
  numTotalThreads: number;
  /**
   *
   * @type {Array<GetCommunity200ResponseAdminsAndModsInner>}
   * @memberof GetCommunity200Response
   */
  adminsAndMods: Array<GetCommunity200ResponseAdminsAndModsInner>;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200Response
   */
  communityBanner?: string | null;
}

export const GetCommunity200ResponseBaseEnum = {
  Cosmos: 'cosmos',
  Substrate: 'substrate',
  Ethereum: 'ethereum',
  Near: 'near',
  Solana: 'solana',
} as const;

export type GetCommunity200ResponseBaseEnum =
  (typeof GetCommunity200ResponseBaseEnum)[keyof typeof GetCommunity200ResponseBaseEnum];
export const GetCommunity200ResponseTypeEnum = {
  Chain: 'chain',
  Dao: 'dao',
  Token: 'token',
  Offchain: 'offchain',
} as const;

export type GetCommunity200ResponseTypeEnum =
  (typeof GetCommunity200ResponseTypeEnum)[keyof typeof GetCommunity200ResponseTypeEnum];
export const GetCommunity200ResponseDefaultPageEnum = {
  DefaultAllDiscussionsView: 'default_all_discussions_view',
  DefaultSummaryView: 'default_summary_view',
  Homepage: 'homepage',
} as const;

export type GetCommunity200ResponseDefaultPageEnum =
  (typeof GetCommunity200ResponseDefaultPageEnum)[keyof typeof GetCommunity200ResponseDefaultPageEnum];
export const GetCommunity200ResponseHasHomepageEnum = {
  True: 'true',
  False: 'false',
} as const;

export type GetCommunity200ResponseHasHomepageEnum =
  (typeof GetCommunity200ResponseHasHomepageEnum)[keyof typeof GetCommunity200ResponseHasHomepageEnum];

/**
 *
 * @export
 * @interface GetCommunity200ResponseAdminsAndModsInner
 */
export interface GetCommunity200ResponseAdminsAndModsInner {
  /**
   *
   * @type {string}
   * @memberof GetCommunity200ResponseAdminsAndModsInner
   */
  address: string;
  /**
   *
   * @type {string}
   * @memberof GetCommunity200ResponseAdminsAndModsInner
   */
  role: GetCommunity200ResponseAdminsAndModsInnerRoleEnum;
}

export const GetCommunity200ResponseAdminsAndModsInnerRoleEnum = {
  Admin: 'admin',
  Moderator: 'moderator',
} as const;

export type GetCommunity200ResponseAdminsAndModsInnerRoleEnum =
  (typeof GetCommunity200ResponseAdminsAndModsInnerRoleEnum)[keyof typeof GetCommunity200ResponseAdminsAndModsInnerRoleEnum];

/**
 *
 * @export
 * @interface GetMembers200Response
 */
export interface GetMembers200Response {
  /**
   *
   * @type {number}
   * @memberof GetMembers200Response
   */
  limit: number;
  /**
   *
   * @type {number}
   * @memberof GetMembers200Response
   */
  page: number;
  /**
   *
   * @type {number}
   * @memberof GetMembers200Response
   */
  totalPages: number;
  /**
   *
   * @type {number}
   * @memberof GetMembers200Response
   */
  totalResults: number;
  /**
   *
   * @type {Array<GetMembers200ResponseResultsInner>}
   * @memberof GetMembers200Response
   */
  results: Array<GetMembers200ResponseResultsInner>;
}
/**
 *
 * @export
 * @interface GetMembers200ResponseResultsInner
 */
export interface GetMembers200ResponseResultsInner {
  /**
   *
   * @type {number}
   * @memberof GetMembers200ResponseResultsInner
   */
  user_id: number;
  /**
   *
   * @type {string}
   * @memberof GetMembers200ResponseResultsInner
   */
  profile_name?: string | null;
  /**
   *
   * @type {string}
   * @memberof GetMembers200ResponseResultsInner
   */
  avatar_url?: string | null;
  /**
   *
   * @type {Array<GetMembers200ResponseResultsInnerAddressesInner>}
   * @memberof GetMembers200ResponseResultsInner
   */
  addresses: Array<GetMembers200ResponseResultsInnerAddressesInner>;
  /**
   *
   * @type {Array<number>}
   * @memberof GetMembers200ResponseResultsInner
   */
  group_ids: Array<number>;
  /**
   * string or date
   * @type {any}
   * @memberof GetMembers200ResponseResultsInner
   */
  last_active?: any | null;
}
/**
 *
 * @export
 * @interface GetMembers200ResponseResultsInnerAddressesInner
 */
export interface GetMembers200ResponseResultsInnerAddressesInner {
  /**
   *
   * @type {number}
   * @memberof GetMembers200ResponseResultsInnerAddressesInner
   */
  id: number;
  /**
   *
   * @type {string}
   * @memberof GetMembers200ResponseResultsInnerAddressesInner
   */
  community_id: string;
  /**
   *
   * @type {string}
   * @memberof GetMembers200ResponseResultsInnerAddressesInner
   */
  address: string;
  /**
   *
   * @type {number}
   * @memberof GetMembers200ResponseResultsInnerAddressesInner
   */
  stake_balance?: number | null;
  /**
   *
   * @type {string}
   * @memberof GetMembers200ResponseResultsInnerAddressesInner
   */
  role: string;
}
/**
 *
 * @export
 * @interface GetMembersMembershipsParameter
 */
export interface GetMembersMembershipsParameter {}

/**
 * CommunityApi - axios parameter creator
 * @export
 */
export const CommunityApiAxiosParamCreator = function (
  configuration?: Configuration,
) {
  return {
    /**
     *
     * @param {string} [addressId]
     * @param {number | null} [limit]
     * @param {number | null} [cursor] required for tRPC useInfiniteQuery hook, equivalent to page number
     * @param {GetCommunitiesOrderByEnum} [orderBy]
     * @param {GetCommunitiesOrderDirectionEnum} [orderDirection]
     * @param {GetCommunitiesBaseEnum} [base]
     * @param {Array<number>} [tagIds]
     * @param {boolean} [includeNodeInfo]
     * @param {boolean} [stakeEnabled]
     * @param {boolean} [hasGroups]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCommunities: async (
      addressId?: string,
      limit?: number | null,
      cursor?: number | null,
      orderBy?: GetCommunitiesOrderByEnum,
      orderDirection?: GetCommunitiesOrderDirectionEnum,
      base?: GetCommunitiesBaseEnum,
      tagIds?: Array<number>,
      includeNodeInfo?: boolean,
      stakeEnabled?: boolean,
      hasGroups?: boolean,
      options: RawAxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      const localVarPath = `/GetCommunities`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = {
        method: 'GET',
        ...baseOptions,
        ...options,
      };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      if (limit !== undefined) {
        localVarQueryParameter['limit'] = limit;
      }

      if (cursor !== undefined) {
        localVarQueryParameter['cursor'] = cursor;
      }

      if (orderBy !== undefined) {
        localVarQueryParameter['order_by'] = orderBy;
      }

      if (orderDirection !== undefined) {
        localVarQueryParameter['order_direction'] = orderDirection;
      }

      if (base !== undefined) {
        localVarQueryParameter['base'] = base;
      }

      if (tagIds) {
        localVarQueryParameter['tag_ids'] = tagIds;
      }

      if (includeNodeInfo !== undefined) {
        localVarQueryParameter['include_node_info'] = includeNodeInfo;
      }

      if (stakeEnabled !== undefined) {
        localVarQueryParameter['stake_enabled'] = stakeEnabled;
      }

      if (hasGroups !== undefined) {
        localVarQueryParameter['has_groups'] = hasGroups;
      }

      if (addressId != null) {
        localVarHeaderParameter['address_id'] = String(addressId);
      }

      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions =
        baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      };

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *
     * @param {string} id
     * @param {string} [addressId]
     * @param {boolean} [includeNodeInfo]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCommunity: async (
      id: string,
      addressId?: string,
      includeNodeInfo?: boolean,
      options: RawAxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      // verify required parameter 'id' is not null or undefined
      assertParamExists('getCommunity', 'id', id);
      const localVarPath = `/GetCommunity`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = {
        method: 'GET',
        ...baseOptions,
        ...options,
      };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      if (id !== undefined) {
        localVarQueryParameter['id'] = id;
      }

      if (includeNodeInfo !== undefined) {
        localVarQueryParameter['include_node_info'] = includeNodeInfo;
      }

      if (addressId != null) {
        localVarHeaderParameter['address_id'] = String(addressId);
      }

      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions =
        baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      };

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
    /**
     *
     * @param {string} communityId
     * @param {string} [addressId]
     * @param {number | null} [limit]
     * @param {number | null} [cursor] required for tRPC useInfiniteQuery hook, equivalent to page number
     * @param {GetMembersOrderByEnum} [orderBy]
     * @param {GetMembersOrderDirectionEnum} [orderDirection]
     * @param {string} [search]
     * @param {boolean} [includeRoles]
     * @param {GetMembersMembershipsParameter} [memberships]
     * @param {boolean} [includeGroupIds]
     * @param {boolean} [includeStakeBalances]
     * @param {string} [allowedAddresses]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMembers: async (
      communityId: string,
      addressId?: string,
      limit?: number | null,
      cursor?: number | null,
      orderBy?: GetMembersOrderByEnum,
      orderDirection?: GetMembersOrderDirectionEnum,
      search?: string,
      includeRoles?: boolean,
      memberships?: GetMembersMembershipsParameter,
      includeGroupIds?: boolean,
      includeStakeBalances?: boolean,
      allowedAddresses?: string,
      options: RawAxiosRequestConfig = {},
    ): Promise<RequestArgs> => {
      // verify required parameter 'communityId' is not null or undefined
      assertParamExists('getMembers', 'communityId', communityId);
      const localVarPath = `/GetMembers`;
      // use dummy base URL string because the URL constructor only accepts absolute URLs.
      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
      let baseOptions;
      if (configuration) {
        baseOptions = configuration.baseOptions;
      }

      const localVarRequestOptions = {
        method: 'GET',
        ...baseOptions,
        ...options,
      };
      const localVarHeaderParameter = {} as any;
      const localVarQueryParameter = {} as any;

      if (limit !== undefined) {
        localVarQueryParameter['limit'] = limit;
      }

      if (cursor !== undefined) {
        localVarQueryParameter['cursor'] = cursor;
      }

      if (orderBy !== undefined) {
        localVarQueryParameter['order_by'] = orderBy;
      }

      if (orderDirection !== undefined) {
        localVarQueryParameter['order_direction'] = orderDirection;
      }

      if (search !== undefined) {
        localVarQueryParameter['search'] = search;
      }

      if (communityId !== undefined) {
        localVarQueryParameter['community_id'] = communityId;
      }

      if (includeRoles !== undefined) {
        localVarQueryParameter['include_roles'] = includeRoles;
      }

      if (memberships !== undefined) {
        for (const [key, value] of Object.entries(memberships)) {
          localVarQueryParameter[key] = value;
        }
      }

      if (includeGroupIds !== undefined) {
        localVarQueryParameter['include_group_ids'] = includeGroupIds;
      }

      if (includeStakeBalances !== undefined) {
        localVarQueryParameter['include_stake_balances'] = includeStakeBalances;
      }

      if (allowedAddresses !== undefined) {
        localVarQueryParameter['allowedAddresses'] = allowedAddresses;
      }

      if (addressId != null) {
        localVarHeaderParameter['address_id'] = String(addressId);
      }

      setSearchParams(localVarUrlObj, localVarQueryParameter);
      let headersFromBaseOptions =
        baseOptions && baseOptions.headers ? baseOptions.headers : {};
      localVarRequestOptions.headers = {
        ...localVarHeaderParameter,
        ...headersFromBaseOptions,
        ...options.headers,
      };

      return {
        url: toPathString(localVarUrlObj),
        options: localVarRequestOptions,
      };
    },
  };
};

/**
 * CommunityApi - functional programming interface
 * @export
 */
export const CommunityApiFp = function (configuration?: Configuration) {
  const localVarAxiosParamCreator =
    CommunityApiAxiosParamCreator(configuration);
  return {
    /**
     *
     * @param {string} [addressId]
     * @param {number | null} [limit]
     * @param {number | null} [cursor] required for tRPC useInfiniteQuery hook, equivalent to page number
     * @param {GetCommunitiesOrderByEnum} [orderBy]
     * @param {GetCommunitiesOrderDirectionEnum} [orderDirection]
     * @param {GetCommunitiesBaseEnum} [base]
     * @param {Array<number>} [tagIds]
     * @param {boolean} [includeNodeInfo]
     * @param {boolean} [stakeEnabled]
     * @param {boolean} [hasGroups]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getCommunities(
      addressId?: string,
      limit?: number | null,
      cursor?: number | null,
      orderBy?: GetCommunitiesOrderByEnum,
      orderDirection?: GetCommunitiesOrderDirectionEnum,
      base?: GetCommunitiesBaseEnum,
      tagIds?: Array<number>,
      includeNodeInfo?: boolean,
      stakeEnabled?: boolean,
      hasGroups?: boolean,
      options?: RawAxiosRequestConfig,
    ): Promise<
      (
        axios?: AxiosInstance,
        basePath?: string,
      ) => AxiosPromise<GetCommunities200Response>
    > {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getCommunities(
        addressId,
        limit,
        cursor,
        orderBy,
        orderDirection,
        base,
        tagIds,
        includeNodeInfo,
        stakeEnabled,
        hasGroups,
        options,
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CommunityApi.getCommunities']?.[
          localVarOperationServerIndex
        ]?.url;
      return (axios, basePath) =>
        createRequestFunction(
          localVarAxiosArgs,
          globalAxios,
          BASE_PATH,
          configuration,
        )(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *
     * @param {string} id
     * @param {string} [addressId]
     * @param {boolean} [includeNodeInfo]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getCommunity(
      id: string,
      addressId?: string,
      includeNodeInfo?: boolean,
      options?: RawAxiosRequestConfig,
    ): Promise<
      (
        axios?: AxiosInstance,
        basePath?: string,
      ) => AxiosPromise<GetCommunity200Response>
    > {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getCommunity(
        id,
        addressId,
        includeNodeInfo,
        options,
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CommunityApi.getCommunity']?.[
          localVarOperationServerIndex
        ]?.url;
      return (axios, basePath) =>
        createRequestFunction(
          localVarAxiosArgs,
          globalAxios,
          BASE_PATH,
          configuration,
        )(axios, localVarOperationServerBasePath || basePath);
    },
    /**
     *
     * @param {string} communityId
     * @param {string} [addressId]
     * @param {number | null} [limit]
     * @param {number | null} [cursor] required for tRPC useInfiniteQuery hook, equivalent to page number
     * @param {GetMembersOrderByEnum} [orderBy]
     * @param {GetMembersOrderDirectionEnum} [orderDirection]
     * @param {string} [search]
     * @param {boolean} [includeRoles]
     * @param {GetMembersMembershipsParameter} [memberships]
     * @param {boolean} [includeGroupIds]
     * @param {boolean} [includeStakeBalances]
     * @param {string} [allowedAddresses]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    async getMembers(
      communityId: string,
      addressId?: string,
      limit?: number | null,
      cursor?: number | null,
      orderBy?: GetMembersOrderByEnum,
      orderDirection?: GetMembersOrderDirectionEnum,
      search?: string,
      includeRoles?: boolean,
      memberships?: GetMembersMembershipsParameter,
      includeGroupIds?: boolean,
      includeStakeBalances?: boolean,
      allowedAddresses?: string,
      options?: RawAxiosRequestConfig,
    ): Promise<
      (
        axios?: AxiosInstance,
        basePath?: string,
      ) => AxiosPromise<GetMembers200Response>
    > {
      const localVarAxiosArgs = await localVarAxiosParamCreator.getMembers(
        communityId,
        addressId,
        limit,
        cursor,
        orderBy,
        orderDirection,
        search,
        includeRoles,
        memberships,
        includeGroupIds,
        includeStakeBalances,
        allowedAddresses,
        options,
      );
      const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
      const localVarOperationServerBasePath =
        operationServerMap['CommunityApi.getMembers']?.[
          localVarOperationServerIndex
        ]?.url;
      return (axios, basePath) =>
        createRequestFunction(
          localVarAxiosArgs,
          globalAxios,
          BASE_PATH,
          configuration,
        )(axios, localVarOperationServerBasePath || basePath);
    },
  };
};

/**
 * CommunityApi - factory interface
 * @export
 */
export const CommunityApiFactory = function (
  configuration?: Configuration,
  basePath?: string,
  axios?: AxiosInstance,
) {
  const localVarFp = CommunityApiFp(configuration);
  return {
    /**
     *
     * @param {string} [addressId]
     * @param {number | null} [limit]
     * @param {number | null} [cursor] required for tRPC useInfiniteQuery hook, equivalent to page number
     * @param {GetCommunitiesOrderByEnum} [orderBy]
     * @param {GetCommunitiesOrderDirectionEnum} [orderDirection]
     * @param {GetCommunitiesBaseEnum} [base]
     * @param {Array<number>} [tagIds]
     * @param {boolean} [includeNodeInfo]
     * @param {boolean} [stakeEnabled]
     * @param {boolean} [hasGroups]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCommunities(
      addressId?: string,
      limit?: number | null,
      cursor?: number | null,
      orderBy?: GetCommunitiesOrderByEnum,
      orderDirection?: GetCommunitiesOrderDirectionEnum,
      base?: GetCommunitiesBaseEnum,
      tagIds?: Array<number>,
      includeNodeInfo?: boolean,
      stakeEnabled?: boolean,
      hasGroups?: boolean,
      options?: any,
    ): AxiosPromise<GetCommunities200Response> {
      return localVarFp
        .getCommunities(
          addressId,
          limit,
          cursor,
          orderBy,
          orderDirection,
          base,
          tagIds,
          includeNodeInfo,
          stakeEnabled,
          hasGroups,
          options,
        )
        .then((request) => request(axios, basePath));
    },
    /**
     *
     * @param {string} id
     * @param {string} [addressId]
     * @param {boolean} [includeNodeInfo]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCommunity(
      id: string,
      addressId?: string,
      includeNodeInfo?: boolean,
      options?: any,
    ): AxiosPromise<GetCommunity200Response> {
      return localVarFp
        .getCommunity(id, addressId, includeNodeInfo, options)
        .then((request) => request(axios, basePath));
    },
    /**
     *
     * @param {string} communityId
     * @param {string} [addressId]
     * @param {number | null} [limit]
     * @param {number | null} [cursor] required for tRPC useInfiniteQuery hook, equivalent to page number
     * @param {GetMembersOrderByEnum} [orderBy]
     * @param {GetMembersOrderDirectionEnum} [orderDirection]
     * @param {string} [search]
     * @param {boolean} [includeRoles]
     * @param {GetMembersMembershipsParameter} [memberships]
     * @param {boolean} [includeGroupIds]
     * @param {boolean} [includeStakeBalances]
     * @param {string} [allowedAddresses]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMembers(
      communityId: string,
      addressId?: string,
      limit?: number | null,
      cursor?: number | null,
      orderBy?: GetMembersOrderByEnum,
      orderDirection?: GetMembersOrderDirectionEnum,
      search?: string,
      includeRoles?: boolean,
      memberships?: GetMembersMembershipsParameter,
      includeGroupIds?: boolean,
      includeStakeBalances?: boolean,
      allowedAddresses?: string,
      options?: any,
    ): AxiosPromise<GetMembers200Response> {
      return localVarFp
        .getMembers(
          communityId,
          addressId,
          limit,
          cursor,
          orderBy,
          orderDirection,
          search,
          includeRoles,
          memberships,
          includeGroupIds,
          includeStakeBalances,
          allowedAddresses,
          options,
        )
        .then((request) => request(axios, basePath));
    },
  };
};

/**
 * CommunityApi - object-oriented interface
 * @export
 * @class CommunityApi
 * @extends {BaseAPI}
 */
export class CommunityApi extends BaseAPI {
  /**
   *
   * @param {string} [addressId]
   * @param {number | null} [limit]
   * @param {number | null} [cursor] required for tRPC useInfiniteQuery hook, equivalent to page number
   * @param {GetCommunitiesOrderByEnum} [orderBy]
   * @param {GetCommunitiesOrderDirectionEnum} [orderDirection]
   * @param {GetCommunitiesBaseEnum} [base]
   * @param {Array<number>} [tagIds]
   * @param {boolean} [includeNodeInfo]
   * @param {boolean} [stakeEnabled]
   * @param {boolean} [hasGroups]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CommunityApi
   */
  public getCommunities(
    addressId?: string,
    limit?: number | null,
    cursor?: number | null,
    orderBy?: GetCommunitiesOrderByEnum,
    orderDirection?: GetCommunitiesOrderDirectionEnum,
    base?: GetCommunitiesBaseEnum,
    tagIds?: Array<number>,
    includeNodeInfo?: boolean,
    stakeEnabled?: boolean,
    hasGroups?: boolean,
    options?: RawAxiosRequestConfig,
  ) {
    return CommunityApiFp(this.configuration)
      .getCommunities(
        addressId,
        limit,
        cursor,
        orderBy,
        orderDirection,
        base,
        tagIds,
        includeNodeInfo,
        stakeEnabled,
        hasGroups,
        options,
      )
      .then((request) => request(this.axios, this.basePath));
  }

  /**
   *
   * @param {string} id
   * @param {string} [addressId]
   * @param {boolean} [includeNodeInfo]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CommunityApi
   */
  public getCommunity(
    id: string,
    addressId?: string,
    includeNodeInfo?: boolean,
    options?: RawAxiosRequestConfig,
  ) {
    return CommunityApiFp(this.configuration)
      .getCommunity(id, addressId, includeNodeInfo, options)
      .then((request) => request(this.axios, this.basePath));
  }

  /**
   *
   * @param {string} communityId
   * @param {string} [addressId]
   * @param {number | null} [limit]
   * @param {number | null} [cursor] required for tRPC useInfiniteQuery hook, equivalent to page number
   * @param {GetMembersOrderByEnum} [orderBy]
   * @param {GetMembersOrderDirectionEnum} [orderDirection]
   * @param {string} [search]
   * @param {boolean} [includeRoles]
   * @param {GetMembersMembershipsParameter} [memberships]
   * @param {boolean} [includeGroupIds]
   * @param {boolean} [includeStakeBalances]
   * @param {string} [allowedAddresses]
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof CommunityApi
   */
  public getMembers(
    communityId: string,
    addressId?: string,
    limit?: number | null,
    cursor?: number | null,
    orderBy?: GetMembersOrderByEnum,
    orderDirection?: GetMembersOrderDirectionEnum,
    search?: string,
    includeRoles?: boolean,
    memberships?: GetMembersMembershipsParameter,
    includeGroupIds?: boolean,
    includeStakeBalances?: boolean,
    allowedAddresses?: string,
    options?: RawAxiosRequestConfig,
  ) {
    return CommunityApiFp(this.configuration)
      .getMembers(
        communityId,
        addressId,
        limit,
        cursor,
        orderBy,
        orderDirection,
        search,
        includeRoles,
        memberships,
        includeGroupIds,
        includeStakeBalances,
        allowedAddresses,
        options,
      )
      .then((request) => request(this.axios, this.basePath));
  }
}

/**
 * @export
 */
export const GetCommunitiesOrderByEnum = {
  ProfileCount: 'profile_count',
  ThreadCount: 'lifetime_thread_count',
} as const;
export type GetCommunitiesOrderByEnum =
  (typeof GetCommunitiesOrderByEnum)[keyof typeof GetCommunitiesOrderByEnum];
/**
 * @export
 */
export const GetCommunitiesOrderDirectionEnum = {
  Asc: 'ASC',
  Desc: 'DESC',
} as const;
export type GetCommunitiesOrderDirectionEnum =
  (typeof GetCommunitiesOrderDirectionEnum)[keyof typeof GetCommunitiesOrderDirectionEnum];
/**
 * @export
 */
export const GetCommunitiesBaseEnum = {
  Cosmos: 'cosmos',
  Substrate: 'substrate',
  Ethereum: 'ethereum',
  Near: 'near',
  Solana: 'solana',
} as const;
export type GetCommunitiesBaseEnum =
  (typeof GetCommunitiesBaseEnum)[keyof typeof GetCommunitiesBaseEnum];
/**
 * @export
 */
export const GetMembersOrderByEnum = {
  LastActive: 'last_active',
  Name: 'name',
} as const;
export type GetMembersOrderByEnum =
  (typeof GetMembersOrderByEnum)[keyof typeof GetMembersOrderByEnum];
/**
 * @export
 */
export const GetMembersOrderDirectionEnum = {
  Asc: 'ASC',
  Desc: 'DESC',
} as const;
export type GetMembersOrderDirectionEnum =
  (typeof GetMembersOrderDirectionEnum)[keyof typeof GetMembersOrderDirectionEnum];
