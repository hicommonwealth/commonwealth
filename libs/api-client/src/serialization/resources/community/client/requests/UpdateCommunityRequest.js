/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from '../../../../../core';
import { UpdateCommunityRequestAddressesItem } from '../../types/UpdateCommunityRequestAddressesItem';
import { UpdateCommunityRequestBase } from '../../types/UpdateCommunityRequestBase';
import { UpdateCommunityRequestChainNode } from '../../types/UpdateCommunityRequestChainNode';
import { UpdateCommunityRequestCommunityStakesItem } from '../../types/UpdateCommunityRequestCommunityStakesItem';
import { UpdateCommunityRequestCommunityTagsItem } from '../../types/UpdateCommunityRequestCommunityTagsItem';
import { UpdateCommunityRequestContestManagersItem } from '../../types/UpdateCommunityRequestContestManagersItem';
import { UpdateCommunityRequestDefaultPage } from '../../types/UpdateCommunityRequestDefaultPage';
import { UpdateCommunityRequestGroupsItem } from '../../types/UpdateCommunityRequestGroupsItem';
import { UpdateCommunityRequestHasHomepage } from '../../types/UpdateCommunityRequestHasHomepage';
import { UpdateCommunityRequestSnapshot } from '../../types/UpdateCommunityRequestSnapshot';
import { UpdateCommunityRequestSocialLinksItem } from '../../types/UpdateCommunityRequestSocialLinksItem';
import { UpdateCommunityRequestTerms } from '../../types/UpdateCommunityRequestTerms';
import { UpdateCommunityRequestTopicsItem } from '../../types/UpdateCommunityRequestTopicsItem';
import { UpdateCommunityRequestType } from '../../types/UpdateCommunityRequestType';

export const UpdateCommunityRequest = core.serialization.object({
  id: core.serialization.string(),
  name: core.serialization.string().optional(),
  chainNodeId: core.serialization.property(
    'chain_node_id',
    core.serialization.number().optional(),
  ),
  defaultSymbol: core.serialization.property(
    'default_symbol',
    core.serialization.string().optional(),
  ),
  base: UpdateCommunityRequestBase.optional(),
  iconUrl: core.serialization.property(
    'icon_url',
    core.serialization.string().optional(),
  ),
  active: core.serialization.boolean().optional(),
  type: UpdateCommunityRequestType.optional(),
  description: core.serialization.string().optional(),
  socialLinks: core.serialization.property(
    'social_links',
    core.serialization.list(UpdateCommunityRequestSocialLinksItem).optional(),
  ),
  ss58Prefix: core.serialization.property(
    'ss58_prefix',
    core.serialization.number().optional(),
  ),
  stagesEnabled: core.serialization.property(
    'stages_enabled',
    core.serialization.boolean().optional(),
  ),
  customStages: core.serialization.property(
    'custom_stages',
    core.serialization.list(core.serialization.string()).optional(),
  ),
  blockExplorerIds: core.serialization.property(
    'block_explorer_ids',
    core.serialization.string().optional(),
  ),
  collapsedOnHomepage: core.serialization.property(
    'collapsed_on_homepage',
    core.serialization.boolean().optional(),
  ),
  defaultSummaryView: core.serialization.property(
    'default_summary_view',
    core.serialization.boolean().optional(),
  ),
  defaultPage: core.serialization.property(
    'default_page',
    UpdateCommunityRequestDefaultPage.optional(),
  ),
  hasHomepage: core.serialization.property(
    'has_homepage',
    UpdateCommunityRequestHasHomepage.optional(),
  ),
  terms: UpdateCommunityRequestTerms.optional(),
  adminOnlyPolling: core.serialization.property(
    'admin_only_polling',
    core.serialization.boolean().optional(),
  ),
  bech32Prefix: core.serialization.property(
    'bech32_prefix',
    core.serialization.string().optional(),
  ),
  hideProjects: core.serialization.property(
    'hide_projects',
    core.serialization.boolean().optional(),
  ),
  tokenName: core.serialization.property(
    'token_name',
    core.serialization.string().optional(),
  ),
  ceVerbose: core.serialization.property(
    'ce_verbose',
    core.serialization.boolean().optional(),
  ),
  discordConfigId: core.serialization.property(
    'discord_config_id',
    core.serialization.number().optional(),
  ),
  category: core.serialization.unknown().optional(),
  discordBotWebhooksEnabled: core.serialization.property(
    'discord_bot_webhooks_enabled',
    core.serialization.boolean().optional(),
  ),
  directoryPageEnabled: core.serialization.property(
    'directory_page_enabled',
    core.serialization.boolean().optional(),
  ),
  directoryPageChainNodeId: core.serialization.property(
    'directory_page_chain_node_id',
    core.serialization.number().optional(),
  ),
  namespace: core.serialization.string().optional(),
  namespaceAddress: core.serialization.property(
    'namespace_address',
    core.serialization.string().optional(),
  ),
  redirect: core.serialization.string().optional(),
  snapshotSpaces: core.serialization.property(
    'snapshot_spaces',
    core.serialization.list(core.serialization.string()).optional(),
  ),
  includeInDigestEmail: core.serialization.property(
    'include_in_digest_email',
    core.serialization.boolean().optional(),
  ),
  profileCount: core.serialization.property(
    'profile_count',
    core.serialization.number().optional(),
  ),
  lifetimeThreadCount: core.serialization.property(
    'lifetime_thread_count',
    core.serialization.number().optional(),
  ),
  bannerText: core.serialization.property(
    'banner_text',
    core.serialization.string().optional(),
  ),
  createdAt: core.serialization.property(
    'created_at',
    core.serialization.date().optional(),
  ),
  updatedAt: core.serialization.property(
    'updated_at',
    core.serialization.date().optional(),
  ),
  addresses: core.serialization.property(
    'Addresses',
    core.serialization.list(UpdateCommunityRequestAddressesItem).optional(),
  ),
  communityStakes: core.serialization.property(
    'CommunityStakes',
    core.serialization
      .list(UpdateCommunityRequestCommunityStakesItem)
      .optional(),
  ),
  communityTags: core.serialization.property(
    'CommunityTags',
    core.serialization.list(UpdateCommunityRequestCommunityTagsItem).optional(),
  ),
  chainNode: core.serialization.property(
    'ChainNode',
    UpdateCommunityRequestChainNode.optional(),
  ),
  topics: core.serialization.list(UpdateCommunityRequestTopicsItem).optional(),
  groups: core.serialization.list(UpdateCommunityRequestGroupsItem).optional(),
  contestManagers: core.serialization.property(
    'contest_managers',
    core.serialization
      .list(UpdateCommunityRequestContestManagersItem)
      .optional(),
  ),
  featuredTopics: core.serialization
    .list(core.serialization.string())
    .optional(),
  snapshot: UpdateCommunityRequestSnapshot.optional(),
  transactionHash: core.serialization.string().optional(),
});
