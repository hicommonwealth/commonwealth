/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as CommonApi from '../../../../../api/index';
import * as core from '../../../../../core';
import * as serializers from '../../../../index';
import { UpdateCommunityRequestAddressesItem } from '../../types/UpdateCommunityRequestAddressesItem';
import { UpdateCommunityRequestBase } from '../../types/UpdateCommunityRequestBase';
import { UpdateCommunityRequestChainNode } from '../../types/UpdateCommunityRequestChainNode';
import { UpdateCommunityRequestCommunityStakesItem } from '../../types/UpdateCommunityRequestCommunityStakesItem';
import { UpdateCommunityRequestCommunityTagsItem } from '../../types/UpdateCommunityRequestCommunityTagsItem';
import { UpdateCommunityRequestContestManagersItem } from '../../types/UpdateCommunityRequestContestManagersItem';
import { UpdateCommunityRequestDefaultPage } from '../../types/UpdateCommunityRequestDefaultPage';
import { UpdateCommunityRequestGroupsItem } from '../../types/UpdateCommunityRequestGroupsItem';
import { UpdateCommunityRequestHasHomepage } from '../../types/UpdateCommunityRequestHasHomepage';
import { UpdateCommunityRequestSnapshot } from '../../types/UpdateCommunityRequestSnapshot';
import { UpdateCommunityRequestSocialLinksItem } from '../../types/UpdateCommunityRequestSocialLinksItem';
import { UpdateCommunityRequestTerms } from '../../types/UpdateCommunityRequestTerms';
import { UpdateCommunityRequestTopicsItem } from '../../types/UpdateCommunityRequestTopicsItem';
import { UpdateCommunityRequestType } from '../../types/UpdateCommunityRequestType';
export declare const UpdateCommunityRequest: core.serialization.Schema<
  serializers.UpdateCommunityRequest.Raw,
  CommonApi.UpdateCommunityRequest
>;
export declare namespace UpdateCommunityRequest {
  interface Raw {
    id: string;
    name?: string | null;
    chain_node_id?: number | null;
    default_symbol?: string | null;
    base?: UpdateCommunityRequestBase.Raw | null;
    icon_url?: string | null;
    active?: boolean | null;
    type?: UpdateCommunityRequestType.Raw | null;
    description?: string | null;
    social_links?: UpdateCommunityRequestSocialLinksItem.Raw[] | null;
    ss58_prefix?: number | null;
    stages_enabled?: boolean | null;
    custom_stages?: string[] | null;
    block_explorer_ids?: string | null;
    collapsed_on_homepage?: boolean | null;
    default_summary_view?: boolean | null;
    default_page?: UpdateCommunityRequestDefaultPage.Raw | null;
    has_homepage?: UpdateCommunityRequestHasHomepage.Raw | null;
    terms?: UpdateCommunityRequestTerms.Raw | null;
    admin_only_polling?: boolean | null;
    bech32_prefix?: string | null;
    hide_projects?: boolean | null;
    token_name?: string | null;
    ce_verbose?: boolean | null;
    discord_config_id?: number | null;
    category?: unknown | null;
    discord_bot_webhooks_enabled?: boolean | null;
    directory_page_enabled?: boolean | null;
    directory_page_chain_node_id?: number | null;
    namespace?: string | null;
    namespace_address?: string | null;
    redirect?: string | null;
    snapshot_spaces?: string[] | null;
    include_in_digest_email?: boolean | null;
    profile_count?: number | null;
    lifetime_thread_count?: number | null;
    banner_text?: string | null;
    created_at?: string | null;
    updated_at?: string | null;
    Addresses?: UpdateCommunityRequestAddressesItem.Raw[] | null;
    CommunityStakes?: UpdateCommunityRequestCommunityStakesItem.Raw[] | null;
    CommunityTags?: UpdateCommunityRequestCommunityTagsItem.Raw[] | null;
    ChainNode?: UpdateCommunityRequestChainNode.Raw | null;
    topics?: UpdateCommunityRequestTopicsItem.Raw[] | null;
    groups?: UpdateCommunityRequestGroupsItem.Raw[] | null;
    contest_managers?: UpdateCommunityRequestContestManagersItem.Raw[] | null;
    featuredTopics?: string[] | null;
    snapshot?: UpdateCommunityRequestSnapshot.Raw | null;
    transactionHash?: string | null;
  }
}
