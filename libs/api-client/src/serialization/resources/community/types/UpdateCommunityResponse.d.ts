/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as CommonApi from '../../../../api/index';
import * as core from '../../../../core';
import * as serializers from '../../../index';
import { UpdateCommunityResponseAddressesItem } from './UpdateCommunityResponseAddressesItem';
import { UpdateCommunityResponseBase } from './UpdateCommunityResponseBase';
import { UpdateCommunityResponseChainNode } from './UpdateCommunityResponseChainNode';
import { UpdateCommunityResponseCommunityStakesItem } from './UpdateCommunityResponseCommunityStakesItem';
import { UpdateCommunityResponseCommunityTagsItem } from './UpdateCommunityResponseCommunityTagsItem';
import { UpdateCommunityResponseContestManagersItem } from './UpdateCommunityResponseContestManagersItem';
import { UpdateCommunityResponseDefaultPage } from './UpdateCommunityResponseDefaultPage';
import { UpdateCommunityResponseGroupsItem } from './UpdateCommunityResponseGroupsItem';
import { UpdateCommunityResponseHasHomepage } from './UpdateCommunityResponseHasHomepage';
import { UpdateCommunityResponseSocialLinksItem } from './UpdateCommunityResponseSocialLinksItem';
import { UpdateCommunityResponseTerms } from './UpdateCommunityResponseTerms';
import { UpdateCommunityResponseTopicsItem } from './UpdateCommunityResponseTopicsItem';
import { UpdateCommunityResponseType } from './UpdateCommunityResponseType';
export declare const UpdateCommunityResponse: core.serialization.ObjectSchema<
  serializers.UpdateCommunityResponse.Raw,
  CommonApi.UpdateCommunityResponse
>;
export declare namespace UpdateCommunityResponse {
  interface Raw {
    id: string;
    name: string;
    chain_node_id?: number | null;
    default_symbol?: string | null;
    network?: string | null;
    base: UpdateCommunityResponseBase.Raw;
    icon_url?: string | null;
    active: boolean;
    type?: UpdateCommunityResponseType.Raw | null;
    description?: string | null;
    social_links?: UpdateCommunityResponseSocialLinksItem.Raw[] | null;
    ss58_prefix?: number | null;
    stages_enabled?: boolean | null;
    custom_stages?: string[] | null;
    custom_domain?: string | null;
    block_explorer_ids?: string | null;
    collapsed_on_homepage?: boolean | null;
    default_summary_view?: boolean | null;
    default_page?: UpdateCommunityResponseDefaultPage.Raw | null;
    has_homepage?: UpdateCommunityResponseHasHomepage.Raw | null;
    terms?: UpdateCommunityResponseTerms.Raw | null;
    admin_only_polling?: boolean | null;
    bech32_prefix?: string | null;
    hide_projects?: boolean | null;
    token_name?: string | null;
    ce_verbose?: boolean | null;
    discord_config_id?: number | null;
    category?: unknown | null;
    discord_bot_webhooks_enabled?: boolean | null;
    directory_page_enabled?: boolean | null;
    directory_page_chain_node_id?: number | null;
    namespace?: string | null;
    namespace_address?: string | null;
    redirect?: string | null;
    snapshot_spaces?: string[] | null;
    include_in_digest_email?: boolean | null;
    profile_count?: number | null;
    lifetime_thread_count?: number | null;
    banner_text?: string | null;
    created_at?: string | null;
    updated_at?: string | null;
    Addresses?: UpdateCommunityResponseAddressesItem.Raw[] | null;
    CommunityStakes?: UpdateCommunityResponseCommunityStakesItem.Raw[] | null;
    CommunityTags?: UpdateCommunityResponseCommunityTagsItem.Raw[] | null;
    ChainNode?: UpdateCommunityResponseChainNode.Raw | null;
    topics?: UpdateCommunityResponseTopicsItem.Raw[] | null;
    groups?: UpdateCommunityResponseGroupsItem.Raw[] | null;
    contest_managers?: UpdateCommunityResponseContestManagersItem.Raw[] | null;
  }
}
