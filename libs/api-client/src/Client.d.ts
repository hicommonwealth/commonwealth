/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "./environments";
import * as core from "./core";
import { Community } from "./api/resources/community/client/Client";
import { Comment } from "./api/resources/comment/client/Client";
import { Thread } from "./api/resources/thread/client/Client";
import { Reaction } from "./api/resources/reaction/client/Client";
export declare namespace CommonApiClient {
    interface Options {
        environment?: core.Supplier<environments.CommonApiEnvironment | string>;
        apiKey?: core.Supplier<string | undefined>;
        /** Override the address header */
        address?: core.Supplier<string | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the address header */
        address?: string | undefined;
    }
}
export declare class CommonApiClient {
    protected readonly _options: CommonApiClient.Options;
    constructor(_options?: CommonApiClient.Options);
    protected _community: Community | undefined;
    get community(): Community;
    protected _comment: Comment | undefined;
    get comment(): Comment;
    protected _thread: Thread | undefined;
    get thread(): Thread;
    protected _reaction: Reaction | undefined;
    get reaction(): Reaction;
}
