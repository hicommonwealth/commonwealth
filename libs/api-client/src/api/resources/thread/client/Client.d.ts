/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from '../../../../core';
import * as environments from '../../../../environments';
import * as CommonApi from '../../../index';
export declare namespace Thread {
  interface Options {
    environment?: core.Supplier<environments.CommonApiEnvironment | string>;
    apiKey: core.Supplier<string>;
    /** Override the address header */
    address?: core.Supplier<string | undefined>;
  }
  interface RequestOptions {
    /** The maximum time to wait for a response in seconds. */
    timeoutInSeconds?: number;
    /** The number of times to retry the request. Defaults to 2. */
    maxRetries?: number;
    /** A hook to abort the request. */
    abortSignal?: AbortSignal;
    /** Override the address header */
    address?: string | undefined;
  }
}
export declare class Thread {
  protected readonly _options: Thread.Options;
  constructor(_options: Thread.Options);
  /**
   * @param {CommonApi.CreateThreadRequest} request
   * @param {Thread.RequestOptions} requestOptions - Request-specific configuration.
   *
   * @example
   *     await client.thread.createThread({
   *         communityId: "community_id",
   *         topicId: 1,
   *         title: "title",
   *         body: "body",
   *         kind: CommonApi.CreateThreadRequestKind.Discussion,
   *         stage: "stage",
   *         readOnly: true
   *     })
   */
  createThread(
    request: CommonApi.CreateThreadRequest,
    requestOptions?: Thread.RequestOptions,
  ): Promise<CommonApi.CreateThreadResponse>;
  /**
   * @param {CommonApi.UpdateThreadRequest} request
   * @param {Thread.RequestOptions} requestOptions - Request-specific configuration.
   *
   * @example
   *     await client.thread.updateThread({
   *         threadId: 1
   *     })
   */
  updateThread(
    request: CommonApi.UpdateThreadRequest,
    requestOptions?: Thread.RequestOptions,
  ): Promise<CommonApi.UpdateThreadResponse>;
  /**
   * @param {CommonApi.DeleteThreadRequest} request
   * @param {Thread.RequestOptions} requestOptions - Request-specific configuration.
   *
   * @example
   *     await client.thread.deleteThread({
   *         threadId: 1
   *     })
   */
  deleteThread(
    request: CommonApi.DeleteThreadRequest,
    requestOptions?: Thread.RequestOptions,
  ): Promise<CommonApi.DeleteThreadResponse>;
  protected _getCustomAuthorizationHeaders(): Promise<{
    'x-api-key': string;
  }>;
}
