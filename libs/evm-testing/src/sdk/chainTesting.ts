import { config } from '@hicommonwealth/model';
import Web3 from 'web3';
import { RegisteredSubscription } from 'web3-eth';
import { AbiItem } from 'web3-utils';
import erc_1155_abi from '../utils/abi/erc1155';
import erc_721_abi from '../utils/abi/erc721';
import { advanceTime, mineBlocks } from '../utils/chainUtil';
import getProvider from '../utils/getProvider';
import { IGovernor } from '../utils/governance/IGovernor';
import { aaveGovernor } from '../utils/governance/aaveGov';
import { compoundGovernor } from '../utils/governance/compoundGov';
import { ERC1155 } from './erc1155';
import { ERC20 } from './erc20';
import { ERC721 } from './nft';
import { SdkBase } from './sdkBase';

export const nftBytecode =
  // eslint-disable-next-line max-len
  '60806040523480156200001157600080fd5b506040518060400160405280600981526020017f54657374546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f546573740000000000000000000000000000000000000000000000000000000081525081600090816200008f919062000412565b508060019081620000a1919062000412565b505050620000c4620000b8620000ca60201b60201c565b620000d260201b60201c565b620004f9565b600033905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200021a57607f821691505b60208210810362000230576200022f620001d2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200029a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200025b565b620002a686836200025b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002f3620002ed620002e784620002be565b620002c8565b620002be565b9050919050565b6000819050919050565b6200030f83620002d2565b620003276200031e82620002fa565b84845462000268565b825550505050565b600090565b6200033e6200032f565b6200034b81848462000304565b505050565b5b8181101562000373576200036760008262000334565b60018101905062000351565b5050565b601f821115620003c2576200038c8162000236565b62000397846200024b565b81016020851015620003a7578190505b620003bf620003b6856200024b565b83018262000350565b50505b505050565b600082821c905092915050565b6000620003e760001984600802620003c7565b1980831691505092915050565b6000620004028383620003d4565b9150826002028217905092915050565b6200041d8262000198565b67ffffffffffffffff811115620004395762000438620001a3565b5b62000445825462000201565b6200045282828562000377565b600060209050601f8311600181146200048a576000841562000475578287015190505b620004818582620003f4565b865550620004f1565b601f1984166200049a8662000236565b60005b82811015620004c4578489015182556001820191506020850194506020810190506200049d565b86831015620004e45784890151620004e0601f891682620003d4565b8355505b6001600288020188555050505b505050505050565b612a1480620005096000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a22cb46511610071578063a22cb465146102cb578063b88d4fde146102e7578063c87b56dd14610303578063e985e9c514610333578063f2fde38b1461036357610116565b8063715018a6146102695780638da5cb5b1461027357806395d89b4114610291578063a1448194146102af57610116565b806323b872dd116100e957806323b872dd146101b557806342842e0e146101d157806342966c68146101ed5780636352211e1461020957806370a082311461023957610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611c12565b61037f565b6040516101429190611c5a565b60405180910390f35b610153610461565b6040516101609190611d05565b60405180910390f35b610183600480360381019061017e9190611d5d565b6104f3565b6040516101909190611dcb565b60405180910390f35b6101b360048036038101906101ae9190611e12565b610539565b005b6101cf60048036038101906101ca9190611e52565b610650565b005b6101eb60048036038101906101e69190611e52565b6106b0565b005b61020760048036038101906102029190611d5d565b6106d0565b005b610223600480360381019061021e9190611d5d565b61072c565b6040516102309190611dcb565b60405180910390f35b610253600480360381019061024e9190611ea5565b6107b2565b6040516102609190611ee1565b60405180910390f35b610271610869565b005b61027b61087d565b6040516102889190611dcb565b60405180910390f35b6102996108a7565b6040516102a69190611d05565b60405180910390f35b6102c960048036038101906102c49190611e12565b610939565b005b6102e560048036038101906102e09190611f28565b61094f565b005b61030160048036038101906102fc919061209d565b610965565b005b61031d60048036038101906103189190611d5d565b6109c7565b60405161032a9190611d05565b60405180910390f35b61034d60048036038101906103489190612120565b610a2f565b60405161035a9190611c5a565b60405180910390f35b61037d60048036038101906103789190611ea5565b610ac3565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061044a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061045a575061045982610b46565b5b9050919050565b6060600080546104709061218f565b80601f016020809104026020016040519081016040528092919081815260200182805461049c9061218f565b80156104e95780601f106104be576101008083540402835291602001916104e9565b820191906000526020600020905b8154815290600101906020018083116104cc57829003601f168201915b5050505050905090565b60006104fe82610bb0565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105448261072c565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab90612232565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105d3610bfb565b73ffffffffffffffffffffffffffffffffffffffff1614806106025750610601816105fc610bfb565b610a2f565b5b610641576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610638906122c4565b60405180910390fd5b61064b8383610c03565b505050565b61066161065b610bfb565b82610cbc565b6106a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069790612356565b60405180910390fd5b6106ab838383610d51565b505050565b6106cb83838360405180602001604052806000815250610965565b505050565b6106e16106db610bfb565b82610cbc565b610720576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071790612356565b60405180910390fd5b6107298161104a565b50565b60008061073883611198565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a0906123c2565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610822576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081990612454565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108716111d5565b61087b6000611253565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108b69061218f565b80601f01602080910402602001604051908101604052809291908181526020018280546108e29061218f565b801561092f5780601f106109045761010080835404028352916020019161092f565b820191906000526020600020905b81548152906001019060200180831161091257829003601f168201915b5050505050905090565b6109416111d5565b61094b8282611319565b5050565b61096161095a610bfb565b8383611337565b5050565b610976610970610bfb565b83610cbc565b6109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac90612356565b60405180910390fd5b6109c1848484846114a3565b50505050565b60606109d282610bb0565b60006109dc6114ff565b905060008151116109fc5760405180602001604052806000815250610a27565b80610a0684611516565b604051602001610a179291906124b0565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610acb6111d5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3190612546565b60405180910390fd5b610b4381611253565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610bb9816115e4565b610bf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bef906123c2565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610c768361072c565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610cc88361072c565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610d0a5750610d098185610a2f565b5b80610d4857508373ffffffffffffffffffffffffffffffffffffffff16610d30846104f3565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610d718261072c565b73ffffffffffffffffffffffffffffffffffffffff1614610dc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbe906125d8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2d9061266a565b60405180910390fd5b610e438383836001611625565b8273ffffffffffffffffffffffffffffffffffffffff16610e638261072c565b73ffffffffffffffffffffffffffffffffffffffff1614610eb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb0906125d8565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611045838383600161162b565b505050565b60006110558261072c565b9050611065816000846001611625565b61106e8261072c565b90506004600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506002600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905581600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461119481600084600161162b565b5050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6111dd610bfb565b73ffffffffffffffffffffffffffffffffffffffff166111fb61087d565b73ffffffffffffffffffffffffffffffffffffffff1614611251576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611248906126d6565b60405180910390fd5b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611333828260405180602001604052806000815250611631565b5050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139c90612742565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114969190611c5a565b60405180910390a3505050565b6114ae848484610d51565b6114ba8484848461168c565b6114f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f0906127d4565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161152584611813565b01905060008167ffffffffffffffff81111561154457611543611f72565b5b6040519080825280601f01601f1916602001820160405280156115765781602001600182028036833780820191505090505b509050600082602001820190505b6001156115d9578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816115cd576115cc6127f4565b5b04945060008503611584575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661160683611198565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b61163b8383611966565b611648600084848461168c565b611687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167e906127d4565b60405180910390fd5b505050565b60006116ad8473ffffffffffffffffffffffffffffffffffffffff16611b83565b15611806578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026116d6610bfb565b8786866040518563ffffffff1660e01b81526004016116f89493929190612878565b6020604051808303816000875af192505050801561173457506040513d601f19601f8201168201806040525081019061173191906128d9565b60015b6117b6573d8060008114611764576040519150601f19603f3d011682016040523d82523d6000602084013e611769565b606091505b5060008151036117ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a5906127d4565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061180b565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611871577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611867576118666127f4565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106118ae576d04ee2d6d415b85acef810000000083816118a4576118a36127f4565b5b0492506020810190505b662386f26fc1000083106118dd57662386f26fc1000083816118d3576118d26127f4565b5b0492506010810190505b6305f5e1008310611906576305f5e10083816118fc576118fb6127f4565b5b0492506008810190505b612710831061192b576127108381611921576119206127f4565b5b0492506004810190505b6064831061194e5760648381611944576119436127f4565b5b0492506002810190505b600a831061195d576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119cc90612952565b60405180910390fd5b6119de816115e4565b15611a1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a15906129be565b60405180910390fd5b611a2c600083836001611625565b611a35816115e4565b15611a75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6c906129be565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611b7f60008383600161162b565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611bef81611bba565b8114611bfa57600080fd5b50565b600081359050611c0c81611be6565b92915050565b600060208284031215611c2857611c27611bb0565b5b6000611c3684828501611bfd565b91505092915050565b60008115159050919050565b611c5481611c3f565b82525050565b6000602082019050611c6f6000830184611c4b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611caf578082015181840152602081019050611c94565b60008484015250505050565b6000601f19601f8301169050919050565b6000611cd782611c75565b611ce18185611c80565b9350611cf1818560208601611c91565b611cfa81611cbb565b840191505092915050565b60006020820190508181036000830152611d1f8184611ccc565b905092915050565b6000819050919050565b611d3a81611d27565b8114611d4557600080fd5b50565b600081359050611d5781611d31565b92915050565b600060208284031215611d7357611d72611bb0565b5b6000611d8184828501611d48565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611db582611d8a565b9050919050565b611dc581611daa565b82525050565b6000602082019050611de06000830184611dbc565b92915050565b611def81611daa565b8114611dfa57600080fd5b50565b600081359050611e0c81611de6565b92915050565b60008060408385031215611e2957611e28611bb0565b5b6000611e3785828601611dfd565b9250506020611e4885828601611d48565b9150509250929050565b600080600060608486031215611e6b57611e6a611bb0565b5b6000611e7986828701611dfd565b9350506020611e8a86828701611dfd565b9250506040611e9b86828701611d48565b9150509250925092565b600060208284031215611ebb57611eba611bb0565b5b6000611ec984828501611dfd565b91505092915050565b611edb81611d27565b82525050565b6000602082019050611ef66000830184611ed2565b92915050565b611f0581611c3f565b8114611f1057600080fd5b50565b600081359050611f2281611efc565b92915050565b60008060408385031215611f3f57611f3e611bb0565b5b6000611f4d85828601611dfd565b9250506020611f5e85828601611f13565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611faa82611cbb565b810181811067ffffffffffffffff82111715611fc957611fc8611f72565b5b80604052505050565b6000611fdc611ba6565b9050611fe88282611fa1565b919050565b600067ffffffffffffffff82111561200857612007611f72565b5b61201182611cbb565b9050602081019050919050565b82818337600083830152505050565b600061204061203b84611fed565b611fd2565b90508281526020810184848401111561205c5761205b611f6d565b5b61206784828561201e565b509392505050565b600082601f83011261208457612083611f68565b5b813561209484826020860161202d565b91505092915050565b600080600080608085870312156120b7576120b6611bb0565b5b60006120c587828801611dfd565b94505060206120d687828801611dfd565b93505060406120e787828801611d48565b925050606085013567ffffffffffffffff81111561210857612107611bb5565b5b6121148782880161206f565b91505092959194509250565b6000806040838503121561213757612136611bb0565b5b600061214585828601611dfd565b925050602061215685828601611dfd565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806121a757607f821691505b6020821081036121ba576121b9612160565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b600061221c602183611c80565b9150612227826121c0565b604082019050919050565b6000602082019050818103600083015261224b8161220f565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b60006122ae603d83611c80565b91506122b982612252565b604082019050919050565b600060208201905081810360008301526122dd816122a1565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000612340602d83611c80565b915061234b826122e4565b604082019050919050565b6000602082019050818103600083015261236f81612333565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b60006123ac601883611c80565b91506123b782612376565b602082019050919050565b600060208201905081810360008301526123db8161239f565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b600061243e602983611c80565b9150612449826123e2565b604082019050919050565b6000602082019050818103600083015261246d81612431565b9050919050565b600081905092915050565b600061248a82611c75565b6124948185612474565b93506124a4818560208601611c91565b80840191505092915050565b60006124bc828561247f565b91506124c8828461247f565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612530602683611c80565b915061253b826124d4565b604082019050919050565b6000602082019050818103600083015261255f81612523565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b60006125c2602583611c80565b91506125cd82612566565b604082019050919050565b600060208201905081810360008301526125f1816125b5565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612654602483611c80565b915061265f826125f8565b604082019050919050565b6000602082019050818103600083015261268381612647565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006126c0602083611c80565b91506126cb8261268a565b602082019050919050565b600060208201905081810360008301526126ef816126b3565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b600061272c601983611c80565b9150612737826126f6565b602082019050919050565b6000602082019050818103600083015261275b8161271f565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006127be603283611c80565b91506127c982612762565b604082019050919050565b600060208201905081810360008301526127ed816127b1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061284a82612823565b612854818561282e565b9350612864818560208601611c91565b61286d81611cbb565b840191505092915050565b600060808201905061288d6000830187611dbc565b61289a6020830186611dbc565b6128a76040830185611ed2565b81810360608301526128b9818461283f565b905095945050505050565b6000815190506128d381611be6565b92915050565b6000602082840312156128ef576128ee611bb0565b5b60006128fd848285016128c4565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b600061293c602083611c80565b915061294782612906565b602082019050919050565b6000602082019050818103600083015261296b8161292f565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b60006129a8601c83611c80565b91506129b382612972565b602082019050919050565b600060208201905081810360008301526129d78161299b565b905091905056fea26469706673582212203bc843a1a5cde87aab470a8df86287147768b8b4d2ed9fc51a0e76478e6f6e1b64736f6c63430008120033';

const testErc1155Bytecode =
  // eslint-disable-next-line
  '608060405234801562000010575f80fd5b506040518060400160405280600381526020017f757269000000000000000000000000000000000000000000000000000000000081525062000058816200005f60201b60201c565b50620003bc565b8060029081620000709190620002d8565b5050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620000f057607f821691505b602082108103620001065762000105620000ab565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200016a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200012d565b6200017686836200012d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620001c0620001ba620001b4846200018e565b62000197565b6200018e565b9050919050565b5f819050919050565b620001db83620001a0565b620001f3620001ea82620001c7565b84845462000139565b825550505050565b5f90565b62000209620001fb565b62000216818484620001d0565b505050565b5b818110156200023d57620002315f82620001ff565b6001810190506200021c565b5050565b601f8211156200028c5762000256816200010c565b62000261846200011e565b8101602085101562000271578190505b6200028962000280856200011e565b8301826200021b565b50505b505050565b5f82821c905092915050565b5f620002ae5f198460080262000291565b1980831691505092915050565b5f620002c883836200029d565b9150826002028217905092915050565b620002e38262000074565b67ffffffffffffffff811115620002ff57620002fe6200007e565b5b6200030b8254620000d8565b6200031882828562000241565b5f60209050601f8311600181146200034e575f841562000339578287015190505b620003458582620002bb565b865550620003b4565b601f1984166200035e866200010c565b5f5b82811015620003875784890151825560018201915060208501945060208101905062000360565b86831015620003a75784890151620003a3601f8916826200029d565b8355505b6001600288020188555050505b505050505050565b611fb980620003ca5f395ff3fe608060405234801561000f575f80fd5b5060043610610090575f3560e01c80632eb2c2d6116100645780632eb2c2d6146101405780634e1273f41461015c578063a22cb4651461018c578063e985e9c5146101a8578063f242432a146101d857610090565b8062fdd58e1461009457806301ffc9a7146100c45780630e89341c146100f4578063156e29f614610124575b5f80fd5b6100ae60048036038101906100a991906113d6565b6101f4565b6040516100bb9190611423565b60405180910390f35b6100de60048036038101906100d99190611491565b610249565b6040516100eb91906114d6565b60405180910390f35b61010e600480360381019061010991906114ef565b61032a565b60405161011b91906115a4565b60405180910390f35b61013e600480360381019061013991906115c4565b6103bc565b005b61015a60048036038101906101559190611804565b6103db565b005b6101766004803603810190610171919061198f565b610482565b6040516101839190611abc565b60405180910390f35b6101a660048036038101906101a19190611b06565b61058f565b005b6101c260048036038101906101bd9190611b44565b6105a5565b6040516101cf91906114d6565b60405180910390f35b6101f260048036038101906101ed9190611b82565b610633565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061031357507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103235750610322826106da565b5b9050919050565b60606002805461033990611c42565b80601f016020809104026020016040519081016040528092919081815260200182805461036590611c42565b80156103b05780601f10610387576101008083540402835291602001916103b0565b820191905f5260205f20905b81548152906001019060200180831161039357829003601f168201915b50505050509050919050565b6103d683838360405180602001604052805f815250610743565b505050565b5f6103e46107d8565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610429575061042786826105a5565b155b1561046d5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610464929190611c81565b60405180910390fd5b61047a86868686866107df565b505050505050565b606081518351146104ce57815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016104c5929190611ca8565b60405180910390fd5b5f835167ffffffffffffffff8111156104ea576104e9611618565b5b6040519080825280602002602001820160405280156105185781602001602082028036833780820191505090505b5090505f5b84518110156105845761055461053c82876108d390919063ffffffff16565b61054f83876108e690919063ffffffff16565b6101f4565b82828151811061056757610566611ccf565b5b6020026020010181815250508061057d90611d29565b905061051d565b508091505092915050565b6105a161059a6107d8565b83836108f9565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f61063c6107d8565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610681575061067f86826105a5565b155b156106c55780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016106bc929190611c81565b60405180910390fd5b6106d28686868686610a62565b505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107b3575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016107aa9190611d70565b60405180910390fd5b5f806107bf8585610b68565b915091506107d05f87848487610b98565b505050505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361084f575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016108469190611d70565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036108bf575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016108b69190611d70565b60405180910390fd5b6108cc8585858585610b98565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610969575f6040517fced3e1000000000000000000000000000000000000000000000000000000000081526004016109609190611d70565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a5591906114d6565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ad2575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610ac99190611d70565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610b42575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610b399190611d70565b60405180910390fd5b5f80610b4e8585610b68565b91509150610b5f8787848487610b98565b50505050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b610ba485858585610c44565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610c3d575f610be06107d8565b90506001845103610c2c575f610bff5f866108e690919063ffffffff16565b90505f610c155f866108e690919063ffffffff16565b9050610c25838989858589610fda565b5050610c3b565b610c3a818787878787611189565b5b505b5050505050565b8051825114610c8e57815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610c85929190611ca8565b60405180910390fd5b5f610c976107d8565b90505f5b8351811015610e99575f610cb882866108e690919063ffffffff16565b90505f610cce83866108e690919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610df1575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d9d57888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610d949493929190611d89565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610e8657805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610e7e9190611dcc565b925050819055505b505080610e9290611d29565b9050610c9b565b506001835103610f54575f610eb75f856108e690919063ffffffff16565b90505f610ecd5f856108e690919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610f45929190611ca8565b60405180910390a45050610fd3565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610fca929190611dff565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611181578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161103a959493929190611e86565b6020604051808303815f875af192505050801561107557506040513d601f19601f820116820180604052508101906110729190611ef2565b60015b6110f6573d805f81146110a3576040519150601f19603f3d011682016040523d82523d5f602084013e6110a8565b606091505b505f8151036110ee57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016110e59190611d70565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461117f57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111769190611d70565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611330578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016111e9959493929190611f1d565b6020604051808303815f875af192505050801561122457506040513d601f19601f820116820180604052508101906112219190611ef2565b60015b6112a5573d805f8114611252576040519150601f19603f3d011682016040523d82523d5f602084013e611257565b606091505b505f81510361129d57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112949190611d70565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461132e57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113259190611d70565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61137282611349565b9050919050565b61138281611368565b811461138c575f80fd5b50565b5f8135905061139d81611379565b92915050565b5f819050919050565b6113b5816113a3565b81146113bf575f80fd5b50565b5f813590506113d0816113ac565b92915050565b5f80604083850312156113ec576113eb611341565b5b5f6113f98582860161138f565b925050602061140a858286016113c2565b9150509250929050565b61141d816113a3565b82525050565b5f6020820190506114365f830184611414565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114708161143c565b811461147a575f80fd5b50565b5f8135905061148b81611467565b92915050565b5f602082840312156114a6576114a5611341565b5b5f6114b38482850161147d565b91505092915050565b5f8115159050919050565b6114d0816114bc565b82525050565b5f6020820190506114e95f8301846114c7565b92915050565b5f6020828403121561150457611503611341565b5b5f611511848285016113c2565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611551578082015181840152602081019050611536565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6115768261151a565b6115808185611524565b9350611590818560208601611534565b6115998161155c565b840191505092915050565b5f6020820190508181035f8301526115bc818461156c565b905092915050565b5f805f606084860312156115db576115da611341565b5b5f6115e88682870161138f565b93505060206115f9868287016113c2565b925050604061160a868287016113c2565b9150509250925092565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61164e8261155c565b810181811067ffffffffffffffff8211171561166d5761166c611618565b5b80604052505050565b5f61167f611338565b905061168b8282611645565b919050565b5f67ffffffffffffffff8211156116aa576116a9611618565b5b602082029050602081019050919050565b5f80fd5b5f6116d16116cc84611690565b611676565b905080838252602082019050602084028301858111156116f4576116f36116bb565b5b835b8181101561171d578061170988826113c2565b8452602084019350506020810190506116f6565b5050509392505050565b5f82601f83011261173b5761173a611614565b5b813561174b8482602086016116bf565b91505092915050565b5f80fd5b5f67ffffffffffffffff82111561177257611771611618565b5b61177b8261155c565b9050602081019050919050565b828183375f83830152505050565b5f6117a86117a384611758565b611676565b9050828152602081018484840111156117c4576117c3611754565b5b6117cf848285611788565b509392505050565b5f82601f8301126117eb576117ea611614565b5b81356117fb848260208601611796565b91505092915050565b5f805f805f60a0868803121561181d5761181c611341565b5b5f61182a8882890161138f565b955050602061183b8882890161138f565b945050604086013567ffffffffffffffff81111561185c5761185b611345565b5b61186888828901611727565b935050606086013567ffffffffffffffff81111561188957611888611345565b5b61189588828901611727565b925050608086013567ffffffffffffffff8111156118b6576118b5611345565b5b6118c2888289016117d7565b9150509295509295909350565b5f67ffffffffffffffff8211156118e9576118e8611618565b5b602082029050602081019050919050565b5f61190c611907846118cf565b611676565b9050808382526020820190506020840283018581111561192f5761192e6116bb565b5b835b818110156119585780611944888261138f565b845260208401935050602081019050611931565b5050509392505050565b5f82601f83011261197657611975611614565b5b81356119868482602086016118fa565b91505092915050565b5f80604083850312156119a5576119a4611341565b5b5f83013567ffffffffffffffff8111156119c2576119c1611345565b5b6119ce85828601611962565b925050602083013567ffffffffffffffff8111156119ef576119ee611345565b5b6119fb85828601611727565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611a37816113a3565b82525050565b5f611a488383611a2e565b60208301905092915050565b5f602082019050919050565b5f611a6a82611a05565b611a748185611a0f565b9350611a7f83611a1f565b805f5b83811015611aaf578151611a968882611a3d565b9750611aa183611a54565b925050600181019050611a82565b5085935050505092915050565b5f6020820190508181035f830152611ad48184611a60565b905092915050565b611ae5816114bc565b8114611aef575f80fd5b50565b5f81359050611b0081611adc565b92915050565b5f8060408385031215611b1c57611b1b611341565b5b5f611b298582860161138f565b9250506020611b3a85828601611af2565b9150509250929050565b5f8060408385031215611b5a57611b59611341565b5b5f611b678582860161138f565b9250506020611b788582860161138f565b9150509250929050565b5f805f805f60a08688031215611b9b57611b9a611341565b5b5f611ba88882890161138f565b9550506020611bb98882890161138f565b9450506040611bca888289016113c2565b9350506060611bdb888289016113c2565b925050608086013567ffffffffffffffff811115611bfc57611bfb611345565b5b611c08888289016117d7565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c5957607f821691505b602082108103611c6c57611c6b611c15565b5b50919050565b611c7b81611368565b82525050565b5f604082019050611c945f830185611c72565b611ca16020830184611c72565b9392505050565b5f604082019050611cbb5f830185611414565b611cc86020830184611414565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d33826113a3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d6557611d64611cfc565b5b600182019050919050565b5f602082019050611d835f830184611c72565b92915050565b5f608082019050611d9c5f830187611c72565b611da96020830186611414565b611db66040830185611414565b611dc36060830184611414565b95945050505050565b5f611dd6826113a3565b9150611de1836113a3565b9250828201905080821115611df957611df8611cfc565b5b92915050565b5f6040820190508181035f830152611e178185611a60565b90508181036020830152611e2b8184611a60565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f611e5882611e34565b611e628185611e3e565b9350611e72818560208601611534565b611e7b8161155c565b840191505092915050565b5f60a082019050611e995f830188611c72565b611ea66020830187611c72565b611eb36040830186611414565b611ec06060830185611414565b8181036080830152611ed28184611e4e565b90509695505050505050565b5f81519050611eec81611467565b92915050565b5f60208284031215611f0757611f06611341565b5b5f611f1484828501611ede565b91505092915050565b5f60a082019050611f305f830188611c72565b611f3d6020830187611c72565b8181036040830152611f4f8186611a60565b90508181036060830152611f638185611a60565b90508181036080830152611f778184611e4e565b9050969550505050505056fea264697066735822122099aa1b36b2fc8a8527592b546d55920ee3a56c886051eafdede445b7a1480d1164736f6c63430008140033';

export class ChainTesting extends SdkBase {
  public contractAddrs = {
    compound: {
      governance: '0xc0Da02939E1441F497fd74F78cE7Decb17B66529'.toLowerCase(),
      token: '0xc00e94Cb662C3520282E6f5717214004A7f26888'.toLowerCase(),
    },
    aave: {
      governance: '0xEC568fffba86c094cf06b22134B23074DFE2252c'.toLowerCase(),
      token: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9'.toLowerCase(),
    },
  };

  // Object where keys are snapshot ids and the boolean variable indicates
  // whether a snapshot id was already used to revert (cannot use id more than
  // once).
  protected chainSnapshotIds: Record<string, boolean> = {};

  /**
   * Creates a ChainTesting SDK Instance
   * @param host The chain-testing api host
   */
  constructor() {
    super();
  }

  public getErc20Contract(tokenAddress: string) {
    return new ERC20(tokenAddress);
  }

  // Proposal
  /**
   * Get voting power via ERC20 token for a given wallet
   * @param accountIndex account index of test chain to get tokens
   * @param numberOfVotes amount of votes/tokens to receive
   * @param govType type of governor. 'compound' || 'aave
   */
  public async getVotingPower(
    accountIndex: number,
    numberOfVotes: string,
    govType: 'compound' | 'aave' = 'compound',
  ) {
    const gov: IGovernor =
      govType === 'compound' ? new compoundGovernor() : new aaveGovernor();
    return await gov.getVotes(accountIndex, numberOfVotes);
  }

  /**
   * Creates an arbitrary Compound proposal
   * @param accountIndex the index of accounts to create from
   * @param govType type of governor. 'compound' || 'aave
   * @returns proposalId of create Proposal
   */
  public async createProposal(
    accountIndex: number,
    govType = 'compound',
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
  ): Promise<any> {
    const gov: IGovernor =
      govType === 'compound' ? new compoundGovernor() : new aaveGovernor();
    return await gov.createArbitraryProposal(accountIndex);
  }

  /**
   * Cancel a proposal
   * @param proposalId proposal Id to cancel
   * @param govType type of governor. 'compound' || 'aave
   * @returns proposalId of cancelled
   */
  public async cancelProposal(
    proposalId: string,
    govType = 'compound',
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
  ): Promise<any> {
    const gov: IGovernor =
      govType === 'compound' ? new compoundGovernor() : new aaveGovernor();
    return await gov.cancelProposal(proposalId);
  }

  /**
   * Cast a vote for an account on a proposal
   * @param proposalId proposal to vote on
   * @param accountIndex account index to vote
   * @param forAgainst vote for or against
   * @param govType type of governor. 'compound' || 'aave
   */
  public async castVote(
    proposalId: string,
    accountIndex: number,
    forAgainst: boolean,
    govType = 'compound',
  ) {
    const gov: IGovernor =
      govType === 'compound' ? new compoundGovernor() : new aaveGovernor();
    return await gov.castVote(proposalId, accountIndex, forAgainst);
  }

  /**
   * Queue a proposal for execution
   * @param proposalId
   * @param govType type of governor. 'compound' || 'aave
   */
  public async queueProposal(
    proposalId: string,
    govType = 'compound',
  ): Promise<{ block: number }> {
    const gov: IGovernor =
      govType === 'compound' ? new compoundGovernor() : new aaveGovernor();
    return await gov.queueProposal(proposalId, true);
  }

  /**
   * execute a passed proposal
   * @param proposalId
   * @param govType type of governor. 'compound' || 'aave
   */
  public async executeProposal(proposalId: string, govType = 'compound') {
    const gov: IGovernor =
      govType === 'compound' ? new compoundGovernor() : new aaveGovernor();
    return await gov.executeProposal(proposalId, true);
  }

  /**
   * Runs a full proposal cycle from getting voting power to execution
   * @param govType type of governor. 'compound' || 'aave
   */
  public async runProposalCycle(govType = 'compound') {
    const gov: IGovernor =
      govType === 'compound' ? new compoundGovernor() : new aaveGovernor();
    await gov.endToEndSim();

    return true;
  }

  /**
   * get current details of a proposal
   * @param proposalId
   * @param govType type of governor. 'compound' || 'aave
   * @returns JSON data of proposal
   */
  public async getProposalDetails(proposalId: string, govType = 'compound') {
    const gov: IGovernor =
      govType === 'compound' ? new compoundGovernor() : new aaveGovernor();
    return await gov.getProposalDetails(proposalId);
  }

  // Chain Data
  /**
   * gets availble, unlocked test chain accounts
   * @returns List of wallets addresses
   */
  public async getAccounts() {
    const provider = getProvider();
    return await provider.eth.getAccounts();
  }

  /**
   * Gets all data for current block
   * @returns JSON data of current block
   */
  public async getBlock() {
    const provider = getProvider();
    return provider.eth.getBlock('latest');
  }

  /**
   * Given a desired block number, this function will call advanceTime to attempt to advance to the desired block
   * number. Given that this is sometimes unreliable the function will return if the block number is greater than
   * or equal to the minBlockNum or if the number of tries exceeds the maxNumTries.
   * @param desiredBlockNum The desired block number to advance to
   * @param minBlockNum The minimum block number to advance to
   * @param maxNumTries The maximum number of times to attempt to advanceTime
   */
  public async safeAdvanceTime(
    desiredBlockNum: number,
    minBlockNum?: number,
    maxNumTries = 10,
  ): Promise<void> {
    let numTries = 0;
    /* eslint-disable */
    while (true) {
      if (numTries >= maxNumTries)
        throw new Error('Timed out waiting for block');
      const currentBlock = (await this.getBlock()).number;
      const numBlocksToAdvance = desiredBlockNum - Number(currentBlock);
      console.log(
        `Current block: ${currentBlock}... waiting for ${desiredBlockNum}`,
      );
      if (currentBlock >= (minBlockNum || desiredBlockNum)) return;

      await this.advanceTime(1, numBlocksToAdvance);

      await new Promise<void>((resolve) => setTimeout(resolve, 1000));
      numTries += 1;
    }
  }

  /**
   * advance the timestamp and block
   * @param seconds amount of seconds to add to timestamp
   * @param blocks amount of blocks to mine
   * @returns '{PreTime, PostTime}'
   */
  public async advanceTime(seconds: number, blocks = 1) {
    return await advanceTime(seconds, blocks);
  }

  /**
   * Get ETH to a given account
   * @param toAddress address to get eth to
   * @param amount amount of eth in ether to receive
   */
  public async getETH(toAddress: string, amount: string) {
    const provider = getProvider();
    const accounts = await provider.eth.getAccounts();
    await provider.eth.sendTransaction({
      from: accounts[7],
      to: toAddress,
      value: provider.utils.toWei(amount, 'ether'),
    });
  }

  public async getChainSnapshot() {
    const provider = new Web3.providers.HttpProvider(
      config.TEST_EVM.PROVIDER_URL,
    );
    const res = await provider.request({
      jsonrpc: '2.0',
      id: 1,
      method: 'evm_snapshot',
      params: [],
    });

    if (res.error) {
      throw new Error((res.error as { code: number; message: string }).message);
    }

    this.chainSnapshotIds[res.result as string] = false;
    return res.result as string;
  }

  public async revertChainToSnapshot(snapshotId: string) {
    if (this.chainSnapshotIds[snapshotId]) {
      throw new Error(`Cannot re-use chain snapshot: ${snapshotId}`);
    }

    const provider = new Web3.providers.HttpProvider(
      config.TEST_EVM.PROVIDER_URL,
    );
    const res = await provider.request({
      jsonrpc: '2.0',
      id: 1,
      method: 'evm_revert',
      params: [snapshotId],
    });

    if (res.error) {
      throw new Error((res.error as { code: number; message: string }).message);
    }

    this.chainSnapshotIds[snapshotId] = true;
    return res.result as boolean;
  }

  public async mineBlocks(blocks: number) {
    return await mineBlocks(blocks);
  }

  /**
   * Deploys an ERC721 and produces a reuseable object to interact with it
   * @returns ERC721 Object
   */
  public async deployNFT(): Promise<ERC721> {
    const provider = getProvider();
    const contract = new provider.eth.Contract(erc_721_abi as AbiItem[]);
    const account = (await provider.eth.getAccounts())[0];
    return new Promise((resolve, reject) => {
      contract
        .deploy({ data: nftBytecode })
        .send({ from: account, gas: '3454486' })
        .on('receipt', (receipt) => {
          resolve(new ERC721(receipt.contractAddress!));
        })
        .on('error', (error) => {
          reject(error);
        });
    });
  }

  public async deployErc1155(): Promise<ERC1155> {
    const provider = getProvider();
    const contract = new provider.eth.Contract(erc_1155_abi as AbiItem[]);
    const account = (await provider.eth.getAccounts())[0];
    return new Promise((resolve, reject) => {
      contract
        .deploy({ data: testErc1155Bytecode })
        .send({ from: account, gas: '5000000' })
        .on('receipt', (receipt) => {
          resolve(new ERC1155(receipt.contractAddress!));
        })
        .on('error', (error) => {
          reject(error);
        });
    });
  }

  //RPC
  /**
   * Gets a web3 provider instance for the running test chain
   * @returns live web3 http provider
   */
  public async getProvider(): Promise<Web3<RegisteredSubscription>> {
    return new Web3(new Web3.providers.HttpProvider('http://127.0.0.1:8545'));
  }
}
