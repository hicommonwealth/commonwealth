apiVersion: vault.banzaicloud.com/v1alpha1
kind: Vault
metadata:
  name: vault
  labels:
    app.kubernetes.io/name: vault
    vault_cr: vault
spec:
  size: 3

  annotations:
    iam.amazonaws.com/role: '{{ .Values.irsaRoleArn }}'
    common/annotation: "true"

  vaultAnnotations:
    type/instance: "vault"

  vaultConfigurerAnnotations:
    type/instance: "vaultconfigurer"


  vaultLabels:
    example.com/log-format: "json"

  vaultConfigurerLabels:
    example.com/log-format: "string"

  image: hashicorp/vault:1.14.8
  bankVaultsImage: ghcr.io/bank-vaults/bank-vaults:latest
  serviceAccount: vault

  existingTlsSecretName: vault-tls

  serviceType: ClusterIP

  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    spec:
      rules:
        - host: vault.unique.rocks
          http:
            paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: vault
                    port:
                      number: 8200
      tls:
        - hosts:
            - vault.unique.rocks
          secretName: wildcard-cert-dns-tls

  volumeClaimTemplates:
    - metadata:
        name: vault-raft
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: gp2
        volumeMode: Filesystem
        resources:
          requests:
            storage: 1Gi

  volumeMounts:
    - name: vault-raft
      mountPath: /vault/file

  caNamespaces:
    - '*'

  unsealConfig:
    options:
      preFlightChecks: true
      storeRootToken: true
      secretShares: 5
      secretThreshold: 3
    aws:
      kmsKeyId: "{{ .Values.kmsKeyId }}"
      s3Bucket: "bank-vaults-development"
      s3Prefix: "vault-operator/"
      s3Region: "{{ .Values.kmsRegion }}"
      kmsRegion: "{{ .Values.kmsRegion }}"
      kmsEncryptionContext: "Service=Vault"

  config:
    seal:
      awskms:
        region: {{ .Values.kmsRegion }}
        kms_key_id: {{ .Values.kmsKeyId }}
    serviceRegistrationEnabled: true
    disable_mlock: true
    storage:
      raft:
        path: /vault/file
    listener:
      tcp:
        address: 0.0.0.0:8200
        tls_cert_file: /vault/tls/server.crt
        tls_key_file: /vault/tls/server.key
        tls_client_ca_file: /vault/tls/ca.crt
    api_addr: https://vault.default:8200
    cluster_addr: "https://${.Env.POD_NAME}:8201"
    ui: true

  statsdDisabled: true

  externalConfig:
    policies:
      - name: allow_secrets
        rules: path "secret/*" {
          capabilities = ["create", "read", "update", "delete", "list"]
          }
    auth:
      - type: kubernetes
        roles:
          # Allow every pod in the default namespace to use the secret kv store
          - name: default
            bound_service_account_names: [ "default", "secrets-webhook" ]
            bound_service_account_namespaces: [ "default", "vswh" ]
            policies: allow_secrets
            ttl: 1h

    secrets:
      - path: secret
        type: kv
        description: General secrets.
        options:
          version: 2