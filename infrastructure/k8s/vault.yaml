apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault
  namespace: argocd
spec:
  destination:
    namespace: vault
    server: https://kubernetes.default.svc
  source:
    path: ''
    repoURL: https://helm.releases.hashicorp.com
    targetRevision: 0.30.0
    chart: vault
    helm:
      parameters:
        - name: server.dev.enabled
          value: 'false'

        # UI and LoadBalancer
        - name: ui.enabled
          value: 'true'
        - name: ui.serviceType
          value: LoadBalancer

        # High Availability with integrated Raft storage
        - name: server.ha.enabled
          value: 'true'
        - name: server.ha.raft.enabled
          value: 'true'
        - name: server.ha.raft.setNodeId
          value: 'true'

        # Enable Kubernetes auth method
        - name: server.authMethods[0].type
          value: kubernetes
        - name: server.authMethods[0].path
          value: demo-auth-mount
        - name: server.authMethods[0].config.kubernetes_host
          value: https://kubernetes.default.svc

        # Required permissions for Kubernetes auth
        - name: server.serviceAccount.create
          value: 'true'
        - name: server.serviceAccount.name
          value: vault
        - name: server.rbac.create
          value: 'true'
        - name: injector.enabled
          value: 'true'
        # Add HA config with KMS seal block
        - name: server.ha.config
          value: |
            ui = true

            listener "tcp" {
              address = "[::]:8200"
              cluster_address = "[::]:8201"
              tls_disable = 1
            }

            storage "raft" {
              path = "/vault/data"
            }

            service_registration "kubernetes" {}

            seal "awskms" {
              region     = "us-west-2"
              kms_key_id = "arn:aws:kms:us-west-2:123456789012:key/abc..."
            }
  sources: []
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true

---
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-init
  namespace: vault
spec:
  template:
    spec:
      serviceAccountName: vault
      containers:
        - name: vault-init
          image: hashicorp/vault:1.15.4
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "Waiting for Vault..."
              until curl -s http://vault.vault.svc.cluster.local:8200/v1/sys/health | grep -q "\"sealed\":true"; do
                echo "Vault not ready..."
                sleep 3
              done

              echo "Initializing Vault..."
              vault operator init -key-shares=1 -key-threshold=1 -format=json > /tmp/init.json
              UNSEAL_KEY=$(jq -r '.unseal_keys_b64[0]' /tmp/init.json)
              ROOT_TOKEN=$(jq -r '.root_token' /tmp/init.json)

              echo "Unsealing Vault..."
              vault operator unseal $UNSEAL_KEY

              echo "Creating Kubernetes Secret with root token..."
              kubectl create secret generic vault-root-token \
                --from-literal=token=$ROOT_TOKEN \
                -n vault

              echo "Vault initialized and unsealed successfully."
          env:
            - name: VAULT_ADDR
              value: http://vault.vault.svc.cluster.local:8200
      restartPolicy: OnFailure
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault-secrets-operator
spec:
  destination:
    namespace: vault-secrets-operator
    server: https://kubernetes.default.svc
  source:
    path: ''
    repoURL: https://helm.releases.hashicorp.com
    targetRevision: 0.10.0
    chart: vault-secrets-operator
    helm:
      parameters:
        - name: defaultVaultConnection.enabled
          value: 'true'
        - name: defaultVaultConnection.address
          value: 'http://vault.vault.svc.cluster.local:8200'
  sources: []
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
