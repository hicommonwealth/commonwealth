{
  "name": "commonwealth",
  "version": "0.0.0",
  "private": true,
  "keywords": [],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/hicommonwealth/commonwealth.git"
  },
  "type": "module",
  "scripts": {
    "async-migrate-comment-version-history": "tsx ./scripts/async-migrate-comment-version-history.ts",
    "async-migrate-thread-version-history": "tsx ./scripts/async-migrate-thread-version-history.ts",
    "add-component-showcase": "tsx ./scripts/add-component-showcase.ts",
    "archive-outbox": "node --import=extensionless/register --max-old-space-size=$(../../scripts/get-max-old-space-size.sh) build/scripts/archive-outbox.js",
    "build": "tsc -b ./tsconfig.build.json && tsc-alias -p ./tsconfig.build.json",
    "build-contracts": "npx hardhat compile",
    "bundle": "vite -c ./client/vite.config.ts build",
    "bundle-analyze": "npx vite-bundle-visualizer -c ./client/vite.config.ts",
    "bootstrap-test-db": "NODE_ENV=test tsx ./scripts/bootstrapTestDb.ts",
    "check-types": "tsc --noEmit",
    "clean": "rm -rf build && rm -rf coverage",
    "clean-db": "tsx server/scripts/cleanDb.ts",
    "cosmos:build": "chmod u+x test/util/cosmos-chain-testing/v1/start.sh && ./test/util/cosmos-chain-testing/v1/start.sh --build && chmod u+x test/util/cosmos-chain-testing/v1beta1/start.sh && ./test/util/cosmos-chain-testing/v1beta1/start.sh --build && chmod u+x test/util/cosmos-chain-testing/ethermint/start.sh && ./test/util/cosmos-chain-testing/ethermint/start.sh --build",
    "cosmos:start": "chmod u+x test/util/cosmos-chain-testing/v1/start.sh && ./test/util/cosmos-chain-testing/v1/start.sh && chmod u+x test/util/cosmos-chain-testing/v1beta1/start.sh && ./test/util/cosmos-chain-testing/v1beta1/start.sh && chmod u+x test/util/cosmos-chain-testing/ethermint/start.sh && ./test/util/cosmos-chain-testing/ethermint/start.sh",
    "cosmos:stop": "chmod u+x test/util/cosmos-chain-testing/v1/stop.sh && ./test/util/cosmos-chain-testing/v1/stop.sh && chmod u+x test/util/cosmos-chain-testing/v1beta1/stop.sh && ./test/util/cosmos-chain-testing/v1beta1/stop.sh && chmod u+x test/util/cosmos-chain-testing/ethermint/stop.sh && ./test/util/cosmos-chain-testing/ethermint/stop.sh",
    "create-migration": "npx sequelize migration:generate --name",
    "db-all": "chmod u+x scripts/db-all.sh && ./scripts/db-all.sh",
    "db-doc": "chmod u+x scripts/gen-mermaid-erd.sh && ./scripts/gen-mermaid-erd.sh > ../../knowledge_base/Database-ERD.md",
    "delete-user": "chmod u+x scripts/delete-user.sh && ./scripts/delete-user.sh",
    "dump-db": "chmod u+x scripts/dump-db.sh && ./scripts/dump-db.sh",
    "e2e-start-server": "pnpm bootstrap-test-db && NODE_ENV=test ETH_RPC=e2e-test pnpm start",
    "emit-event": "chmod u+x scripts/emit-event.sh && ./scripts/emit-event.sh",
    "emit-notification": "tsx server/scripts/emitTestNotification.ts",
    "emit-webhook": "tsx server/scripts/emitWebhook.ts",
    "format": "prettier --ignore-path ../../.prettierignore --config ../../.prettierrc.json --write .",
    "lint-all": "eslint client/\\**/*.{ts,tsx} server/\\**/*.ts",
    "lint-branch": "./scripts/lint-branch.sh",
    "lint-diff": "NODE_OPTIONS='--max-old-space-size=16384' eslint --cache -c ../../.eslintrc-diff.cjs client/\\**/*.{ts,tsx} server/\\**/*.ts scripts/\\**/*.ts shared/\\**/*.ts test/\\**/*.ts",
    "lint-diff-canary": "cp test/canary/eslint_canary.ts.disabled test/canary/eslint_canary.ts && (NODE_OPTIONS='--max-old-space-size=16384' eslint --cache -c ../../.eslintrc-diff.cjs test/canary/eslint_canary.ts | tail +2; true) > test/canary/eslint_canary.log ; diff -w -u test/canary/eslint_canary.log test/canary/eslint_canary.snap",
    "load-db": "chmod u+x scripts/load-db.sh && ./scripts/load-db.sh",
    "migrate-db": "npx sequelize db:migrate",
    "migrate-db-down": "npx sequelize db:migrate:undo",
    "preview": "concurrently -p '{name}' -c red,green 'PORT=3000 pnpm run start' 'vite preview -c ./client/vite.config.ts'",
    "psql": "chmod u+x scripts/start-psql.sh && ./scripts/start-psql.sh",
    "publish-rmq-msg": "tsx ./scripts/publishRmqMessageScript.ts",
    "refresh-all-memberships": "tsx ./scripts/refresh-all-memberships.ts",
    "reset-db": "chmod u+x scripts/reset-db.sh && ./scripts/reset-db.sh",
    "resize-large-images": "tsx ./scripts/resizeImages.ts",
    "set-super-admin": "chmod u+x scripts/set-super-admin.sh && ./scripts/set-super-admin.sh",
    "start": "concurrently -p '{name}' -c red,green 'PORT=3000 pnpm run start-api' 'pnpm run vite'",
    "start-api": "tsx watch --max-old-space-size=4096 server.ts",
    "start-ci": "FETCH_INTERVAL_MS=500 tsx server.ts",
    "start-consumer": "tsx server/workers/commonwealthConsumer/commonwealthConsumer.ts",
    "start-evm-ce": "tsx server/workers/evmChainEvents/startEvmPolling.ts",
    "start-knock": "tsx server/workers/knock/knockWorker.ts",
    "start-message-relayer": "tsx ./server/workers/messageRelayer/messageRelayer.ts",
    "stylelint": "stylelint client/styles/*",
    "test": "pnpm test-unit",
    "test-api": "INIT_TEST_DB=true NODE_ENV=test vitest --config ../../vite.config.ts --fileParallelism=false --coverage run ./test/integration/api",
    "test-devnet:cosmos": "INIT_TEST_DB=true NODE_ENV=test vitest --config ../../vite.config.ts --fileParallelism=false --coverage run ./test/devnet/cosmos",
    "test-devnet:evm": "INIT_TEST_DB=true NODE_ENV=test vitest --config ../../vite.config.ts --fileParallelism=false --coverage run ./test/devnet/evm",
    "test-e2e": "NODE_OPTIONS='--import tsx/esm' NODE_ENV=test TEST_ENV=playwright npx playwright test -c ./test/e2e/playwright.config.ts --workers 1 ./test/e2e/e2eRegular/*",
    "test-e2e-mature": "NODE_OPTIONS='--import tsx/esm' NODE_ENV=test TEST_ENV=playwright npx playwright test -c ./test/e2e/playwright.config.ts --workers 1 ./test/e2e/mature/*",
    "test-e2e-serial": "NODE_OPTIONS='--import tsx/esm' NODE_ENV=test TEST_ENV=playwright npx playwright test --workers 1 ./test/e2e/e2eSerial/*",
    "test-integration": "INIT_TEST_DB=true NODE_ENV=test vitest --config ../../vite.config.ts --fileParallelism=false --coverage run ./test/integration",
    "test-unit": "NODE_ENV=test FEATURE_FLAG_GROUP_CHECK_ENABLED=true vitest --config ../../vite.config.ts --coverage run test/unit",
    "test-select": "INIT_TEST_DB=true NODE_ENV=test vitest --config ../../vite.config.ts --fileParallelism=false run",
    "test-select:watch": "INIT_TEST_DB=true NODE_ENV=test vitest --config ../../vite.config.ts --fileParallelism=false",
    "ts-exec": "tsx ",
    "vite": "wait-on http://localhost:3000/api/health && vite -c ./client/vite.config.ts --host",
    "wait-server": "chmod +x ./scripts/wait-server.sh && ./scripts/wait-server.sh"
  },
  "dependencies": {
    "@atomone/govgen-types-long": "^0.3.9",
    "@brillout/import": "^0.2.2",
    "@canvas-js/core": "^0.10.10",
    "@canvas-js/gossiplog": "^0.10.10",
    "@canvas-js/chain-cosmos": "^0.10.10",
    "@canvas-js/chain-ethereum": "^0.10.10",
    "@canvas-js/chain-solana": "^0.10.10",
    "@canvas-js/chain-substrate": "^0.10.10",
    "@canvas-js/interfaces": "^0.10.10",
    "@canvas-js/signatures": "^0.10.10",
    "@cosmjs/amino": "^0.31.3",
    "@cosmjs/cosmwasm-stargate": "^0.31.3",
    "@cosmjs/crypto": "0.31.3",
    "@cosmjs/encoding": "0.32.3",
    "@cosmjs/math": "^0.31.3",
    "@cosmjs/proto-signing": "^0.31.3",
    "@cosmjs/stargate": "^0.31.3",
    "@cosmjs/tendermint-rpc": "^0.31.3",
    "@cosmjs/utils": "^0.31.3",
    "@ethersproject/abi": "^5.7.0",
    "@ethersproject/address": "^5.7.0",
    "@ethersproject/bignumber": "^5.7.0",
    "@ethersproject/bytes": "^5.7.0",
    "@ethersproject/constants": "^5.7.0",
    "@ethersproject/hash": "^5.7.0",
    "@ethersproject/providers": "^5.7.2",
    "@ethersproject/strings": "^5.7.0",
    "@ethersproject/units": "^5.7.0",
    "@ethersproject/wallet": "^5.7.0",
    "@glidejs/glide": "^3.6.0",
    "@hicommonwealth/adapters": "workspace:*",
    "@hicommonwealth/chains": "workspace:*",
    "@hicommonwealth/core": "workspace:*",
    "@hicommonwealth/evm-testing": "workspace:*",
    "@hicommonwealth/model": "workspace:*",
    "@hicommonwealth/schemas": "workspace:*",
    "@hicommonwealth/shared": "workspace:*",
    "@hookform/resolvers": "^3.3.1",
    "@ipld/dag-json": "^10.2.0",
    "@keplr-wallet/types": "^0.12.23",
    "@keplr-wallet/unit": "^0.12.23",
    "@knocklabs/node": "^0.6.11",
    "@knocklabs/react": "^0.2.15",
    "@knocklabs/react-notification-feed": "^0.8.15",
    "@magic-ext/cosmos": "^12.1.3",
    "@magic-ext/oauth": "^11.1.1",
    "@magic-sdk/admin": "^2.4.0",
    "@metamask/detect-provider": "^2.0.0",
    "@metamask/eth-sig-util": "^4.0.0",
    "@mui/base": "5.0.0-beta.5",
    "@noble/hashes": "^1.4.0",
    "@openfeature/core": "^1.1.0",
    "@openfeature/react-sdk": "^0.1.1-experimental",
    "@openfeature/server-sdk": "^1.11.0",
    "@osmonauts/lcd": "^0.10.0",
    "@phosphor-icons/react": "^2.0.8",
    "@polkadot/extension-dapp": "0.40.3",
    "@polkadot/extension-inject": "0.47.4",
    "@polkadot/util": "12.6.2",
    "@polkadot/util-crypto": "12.6.2",
    "@popperjs/core": "^2.0.6",
    "@sendgrid/mail": "^6.5.0",
    "@snapshot-labs/snapshot.js": "^0.4.35",
    "@solana/web3.js": "^1.30.2",
    "@tanstack/react-query": "^4.29.7",
    "@tanstack/react-query-devtools": "^4.29.7",
    "@tanstack/react-table": "^8.9.7",
    "@terra-money/terra.js": "^3.1.7",
    "@terra-money/wallet-provider": "^3.11.2",
    "@trpc/client": "^10.45.1",
    "@trpc/react-query": "^10.45.1",
    "@types/react-helmet-async": "^1.0.3",
    "@viem/anvil": "^0.0.10",
    "@walletconnect/ethereum-provider": "^2.10.1",
    "@walletconnect/modal": "^2.4.6",
    "ajv": "^8.12.0",
    "assert": "^2.0.0",
    "axios": "^1.3.4",
    "bech32": "^2.0.0",
    "bignumber.js": "9.1.2",
    "bn.js": "^4.12.0",
    "browser-image-compression": "^2.0.2",
    "browserify-zlib": "^0.2.0",
    "bs58": "^4.0.1",
    "buffer": "^6.0.3",
    "cheerio": "1.0.0-rc.3",
    "clsx": "^1.2.1",
    "commonwealth-mdxeditor": "^0.0.3",
    "compression": "^1.7.4",
    "connect-session-sequelize": "^7.1.1",
    "cookie-parser": "^1.4.4",
    "core-js": "^3.34.0",
    "cors": "^2.8.5",
    "cosmjs-types": "0.8.0",
    "crypto-browserify": "^3.12.0",
    "dompurify": "^2.2.6",
    "dotenv": "^16.0.3",
    "esm-loader-css": "^1.0.6",
    "ethereumjs-util": "7.1.0",
    "ethereumjs-wallet": "^1.0.2",
    "ethers": "5.7.2",
    "express": "^4.18.2",
    "express-async-errors": "^3.1.1",
    "express-http-to-https": "^1.1.4",
    "express-session": "^1.17.0",
    "express-useragent": "^1.0.15",
    "express-validator": "^6.14.2",
    "feed": "^4.2.2",
    "firebase": "^10.12.1",
    "graphql": "^16.9.0",
    "graphql-request": "^7.1.0",
    "highlight-words-core": "^1.2.2",
    "is-ipfs": "^8.0.1",
    "is-my-json-valid": "^2.20.6",
    "jdenticon": "^2.1.1",
    "jsdom-global": "^3.0.2",
    "jsonwebtoken": "^9.0.0",
    "lodash": "^4.17.21",
    "long": "^5.2.3",
    "magic-sdk": "^17.1.4",
    "marked": "^11.0.0",
    "marked-footnote": "^1.2.2",
    "marked-smartypants": "1.1.5",
    "marked-xhtml": "1.0.8",
    "mixpanel-browser": "^2.45.0",
    "moment": "^2.23.0",
    "node-fetch": "2",
    "node-jose": "^2.2.0",
    "node-object-hash": "^3.0.0",
    "numeral": "^2.0.6",
    "openai": "^4.0.0",
    "os-browserify": "^0.3.0",
    "parchment": "^1.1.4",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.0",
    "passport-magic": "^1.0.0",
    "path-browserify": "^1.0.1",
    "pg": "^8.11.3",
    "pino-http": "^9.0.0",
    "prerender-node": "^3.7.0",
    "process": "^0.11.10",
    "protobufjs": "^6.1.13",
    "quill": "^1.3.7",
    "quill-image-drop-and-paste": "^1.0.4",
    "quill-magic-url": "^4.2.0",
    "quill-mention": "^2.2.7",
    "react": "^18.2.0",
    "react-beautiful-dnd": "^13.1.1",
    "react-device-detect": "^2.2.3",
    "react-dom": "^18.2.0",
    "react-dropzone": "^14.2.3",
    "react-error-boundary": "^3.1.4",
    "react-helmet-async": "^2.0.4",
    "react-hook-form": "^7.46.1",
    "react-intersection-observer": "^9.5.2",
    "react-jdenticon": "^1.0.0",
    "react-json-view": "^1.21.3",
    "react-loading-skeleton": "^3.3.1",
    "react-modern-drawer": "^1.2.2",
    "react-quill": "^2.0.0",
    "react-router": "^6.9.0",
    "react-router-dom": "^6.9.0",
    "react-select": "^5.7.0",
    "react-toastify": "^9.1.1",
    "react-virtuoso": "^4.1.0",
    "remove-markdown": "^0.5.0",
    "sass": "^1.55.0",
    "sequelize": "^6.32.1",
    "sequelize-cli": "^6.2.0",
    "siwe": "^2.1.4",
    "sleep-promise": "^8.0.1",
    "smart-truncate": "^1.0.1",
    "stream-browserify": "^3.0.0",
    "stream-http": "^3.2.0",
    "superagent": "^5.2.2",
    "tsconfig-paths": "^4.2.0",
    "tsx": "^4.7.2",
    "tweetnacl": "^1.0.3",
    "underscore": "^1.13.1",
    "unique-username-generator": "^1.3.0",
    "unleash-proxy-client": "^3.3.1",
    "usehooks-ts": "^2.9.1",
    "uuid": "^9.0.1",
    "vm-browserify": "^1.1.2",
    "web3": "^4.7.0",
    "web3-core": "^4.3.2",
    "web3-utils": "^4.2.2",
    "web3-validator": "2.0.5",
    "yargs": "^17.7.2",
    "zod": "^3.22.4",
    "zustand": "^4.3.8"
  },
  "devDependencies": {
    "@ethersproject/keccak256": "5.7.0",
    "@types/express": "^4.17.21",
    "@types/moment": "^2.13.0",
    "@types/passport": "^1.0.16",
    "@types/passport-auth-token": "^1.0.4",
    "@types/sinon": "^17.0.3",
    "@types/uuid": "^9.0.7",
    "sinon": "^17.0.2"
  }
}
