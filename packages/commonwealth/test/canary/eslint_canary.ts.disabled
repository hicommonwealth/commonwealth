// An eslint 'canary' that verifies that eslint-diff properly handles errors
// during the build.  If we don't actually *test* that we fail properly then
// it's possible we added an eslint rule that doesn't actually do anything
//
// The way this works is that this file uses a .ts.disabled suffix when in the
// repo then we rename it to .ts and run eslint but only in CI.  Then we verify
// the eslint-diff output is correct vs a snapshot.
//
// To update the snapshot just run lint-diff-canary and run
//
// cp test/canary/eslint_canary.log test/canary/eslint_canary.snap

// *****************************************************************************
// Do not allow global eslint disabling of rules
/* eslint-disable react/jsx-key */

// *****************************************************************************
// no-restricted-imports: import from outside the project root

import { ServerError } from '../../../../libs/core/src/errors';

// eslint-disable-next-line @typescript-eslint/no-unused-vars
function doSomething() {
  throw new ServerError('required or prettier will remove');
}

// *****************************************************************************
// @typescript-eslint/require-await
// @typescript-eslint/no-floating-promises
async function doAsync() {
  console.log('My async function');
}

doAsync();

// *****************************************************************************
// no-warning-comments
//
// FIXME this should not be accepted
