/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockETHChainlinkUSDAdapter } from "../MockETHChainlinkUSDAdapter";

export class MockETHChainlinkUSDAdapter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockETHChainlinkUSDAdapter> {
    return super.deploy(overrides || {}) as Promise<MockETHChainlinkUSDAdapter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockETHChainlinkUSDAdapter {
    return super.attach(address) as MockETHChainlinkUSDAdapter;
  }
  connect(signer: Signer): MockETHChainlinkUSDAdapter__factory {
    return super.connect(signer) as MockETHChainlinkUSDAdapter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockETHChainlinkUSDAdapter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockETHChainlinkUSDAdapter;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "getPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "viewPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060858061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063e1aa6036146037578063f55fa17f146037575b600080fd5b6404a817c80060405190815260200160405180910390f3fea26469706673582212201b0a7bd09795bc3929e52b020114d889565e6a18134a9fd0ccfee8fd9ba7342864736f6c63430008040033";
